#!/usr/bin/awk -f

# Copyright (c) 2007-2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

BEGIN {
	last_fn    = ""
	first_file = 1
}

function trim (s){
	sub(/^[ \t]+/, "", s)
	sub(/[ \t]+$/, "", s)

	return s
}

last_fn != FILENAME {
	if (last_fn != ""){
		first_file = 0
	}

	last_fn = FILENAME
}

function cmp_vers (ver1, ver2,           i,arr1,arr2,rev1,rev2,cnt1,cnt2){
	# nb[0-9]+ suffix
	if (match(ver1, /nb[0-9]+$/)){
		rev1 = substr(ver1, RSTART + 2)
		ver1 = substr(ver1, 1, RSTART - 1)
	}
	rev1 += 0

	if (match(ver2, /nb[0-9]+$/)){
		rev2 = substr(ver2, RSTART + 2)
		ver2 = substr(ver2, 1, RSTART - 1)
	}
	rev2 += 0

	# different in revisions only
	if (ver1 == ver2){
		if (rev1 < rev2){
			return "<"
		}
		if (rev1 > rev2){
			return ">"
		}

		return "="
	}

	# split into components
	cnt1 = split(ver1, arr1, /[.]/)
	cnt2 = split(ver2, arr2, /[.]/)

	# incompable?
	if (cnt1 != cnt2)
		return "?"

	# compare by components
	for (i=1; i <= cnt1; ++i){
		if (arr1 [i] ~ /^[0-9]+$/ && arr2 [i] ~ /^[0-9]+$/){
			arr1 [i] += 0
			arr2 [i] += 0

			if (arr1 [i] < arr2 [i])
				return "<"
			if (arr1 [i] > arr2 [i])
				return ">"
		}else if (arr1 [i] != arr2 [i]){
			return "?"
		}
	}

	return "="
}

$0 ~ /^PKGNAME=/ {
	pkgname = trim(substr($0, 9))

	# ver
	ver = pkgname
	sub(/^.*-/, "", ver)

	# pkgbase
	pkgbase = pkgname
	sub(/-[^-]+$/, "", pkgbase)

	#
	if (first_file){
		# first file!
		if (pkgbase in names){
			if (! (pkgbase in duplicates))
				duplicates [pkgbase] = 1

			++duplicates [pkgbase]
		}else{
			names [pkgbase] = ver
		}
	}else{
		present [pkgbase] = 0

		# second file!
		if (pkgbase in duplicates){
			next
		}

		if (! (pkgbase in names)){
			print "+", pkgbase, ver
			next
		}

		ver1 = names [pkgbase]
		res = cmp_vers(ver1, ver)
		print res, pkgbase, ver1, ver
	}

	next
}

END {
	for (pkgbase in names){
		if (! (pkgbase in present)){
			print "-", pkgbase, names [pkgbase]
			delete duplicates [pkgbase]
		}else if (pkgbase in duplicates){
			print duplicates [pkgbase], pkgbase
		}
	}
}
