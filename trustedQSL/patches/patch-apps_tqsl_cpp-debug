$NetBSD$

Temporary fix for hung immediately after invocation.

--- apps/tqsl.cpp~	2014-01-17 15:11:06.000000000 +0900
+++ apps/tqsl.cpp	2014-01-17 16:33:08.000000000 +0900
@@ -840,6 +840,7 @@ class UpdateThread : public wxThread {
 
 void
 MyFrame::DoUpdateCheck(bool silent, bool noGUI) {
+	int tmp;
 	//check for updates
 	if (!noGUI) {
 		wxSafeYield();
@@ -851,8 +852,10 @@ MyFrame::DoUpdateCheck(bool silent, bool
 	wxSafeYield();
 	thread->Run();
 	wxSafeYield();
-	while (updateMutex.TryLock() == wxMUTEX_BUSY)
+	while (tmp = updateMutex.TryLock() == wxMUTEX_BUSY) {
+	  if (tmp == wxMUTEX_INVALID) break;
 		wxSafeYield();
+	}
 	updateMutex.Unlock();
 	if (!noGUI) {
 		logwin->SetValue(wxT(""));		// Clear the checking message
@@ -4025,6 +4028,9 @@ QSLApp::OnInit() {
 			cerr << "Option -n cannot be combined with any other options" << endl;
 			exitNow(TQSL_EXIT_COMMAND_ERROR, quiet);
 		}
+#if 1
+		wxLogMessage(wxT("(Check update done.)"));
+#endif
 		frame = GUIinit(false, true);
 		frame->Show(false);
 		// Check for updates then bail out.
@@ -4033,6 +4039,10 @@ QSLApp::OnInit() {
 		return(false);
 	}
 
+	// without following debug line, it segfaults if -n is given.
+#if 1
+	wxLogMessage(wxT("(GUIinit)"));
+#endif
 	frame =GUIinit(!quiet, quiet);
 	if (quiet) {
 		wxLog::SetActiveTarget(new LogStderr());
