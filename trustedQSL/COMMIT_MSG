(Authors note):
As I've had no comments on the 2.0.2-rc5 beta, I've decided that it's time to release it.

The kits on sourceforge have been updated to the final v2.0.2 release.

https://sourceforge.net/projects/trustedqsl/files/TrustedQSL/v2.0.2/

The README there is the preliminary release notes.
Thanks to everyone for the help with testing and reporting issues.
----------------------------
tqsl-2.0.2RC4 to 2.0.2RC5 change:
----------
This release fixes a pair of related defects that have been there
since TQSL 1.x

When you create a station location, you associate it with a callsign
certificate. When you sign a log, you select a location for signing,
which then uses the callsign to select the right callsign certificate.

The problems happen when you do unexpected things with those
certificates.

If you create a station location for K1MU, then delete all of the
certificates for K1MU, then signing a log would cause an "Invalid
Argument" error. TQSL has been corrected to now display an error that
there are no valid callsign certificates.

Similarly, if you create a station location and then let the
associated callsign certificate to expire, trying to sign using that
location would also give an unhelpful "Invalid Argument" message.

When there were no matching certificates, displaying the properties of
a station location would display an incorrect callsign.

These defects have been corrected in RC5 so that useful error messages
are displayed for these cases.
----------------------------
Bump 2.0.2RC3 to 2.0.2RC4. The letter from developer:
-------------------
Things have been pretty quiet for 2.0.2, so I've posted a kit
with the final 2.0.2 changes.

Two significant changes are included in -RC4:

1. When prompting a user for the password to unlock their
callsign certificate while signing a log, don't pop up the
main TQSL window if TQSL is being run in batch mode (usually
this is when a logging program is using TQSL to sign).

2. If the QSO database can't be opened and can't be repaired,
delete it and start over.

As usual, please let me know if you see any problems. If
nothing is seen, I'll be posting an announcement for these on
ARRL-LOTW for final testing next weekend.
----------------------------
Bump 2.0.2-RC2 to 2.0.2-RC3
-------------
This is the third release candidate for TQSL 2.0.2.

Changes since -RC2:

Ensure that station locations added from the "sign a log" selection dialog
are added to the list of station locations.

Allow restore from a .tbk file to restore multiple pending callsign
certificates for a given callsign.

Change message on upload dialog box when a certificate request is being
uploaded to indicate that it's a callsign certificate request, not a log file
being uploaded.

When a renewed callsign certificate is installed, delete any older versions
for that callsign.

Correct defect that could cause errors when using files in directories
containing non-ASCII characters on Windows.

Correctly account for errors when signing a log so that the number of QSOs
processed is displayed correctly. (For some cases where QSOs caused errors
which the user chose to ignore, the number of QSOs processed could show up as
a negative number.)
  ( .. ommitted .. Binary download for Windows/Mac/Linux URL)
Please let us know if you see any problems with this release. I will be
announcing this as a beta on ARRL-LOTW in a week or so.
(By Rick Murphy K1MU/4, Annandale VA USA)
----------------------------
Upgrade 2.0.2-RC1 to 2.0.2-RC2
   (Mail from upstream developer)
----------
There is a defect in TQSL 2.0.1 when used on Windows systems that several
people have reported.

If you try to sign a log that is stored somewhere that has non-english
characters in the path name (i.e. c:\Users\(arabian-chars)\Documents), TQSL
could fail with "No such file or directory" when trying to open the ADIF or
Cabrillo file.

You can avoid this bug by moving your log files to a simple directory, such
as "C:\Logs".

There's a new TQSL test release, v2.0.2-RC2, which has this defect corrected.

If you run into this problem, either consider upgrading to TQSL 2.0.2-RC2, or
adjust where your log files are stored.
----------------------------
(Upstream)  version: tqsl-2.0.1RC9 tqsl-2.0.2-RC1
--- Mail from Author ---
You have likely read that there is a defect in the OpenSSL software that
can potentially cause information disclosure, including the loss of
private information such as secret keys, passwords, cookies, and so
forth.

TQSL uses the OpenSSL software to manage callsign certificates and to
sign logs. Those functions do not use the part of the OpenSSL software
that has the Heartbleed defect.

However, TQSL also uses the OpenSSL software to manage connections to
the lotw.arrl.org site for processing uploads and downloads. Those
functions DO use the part of OpenSSL that's subject to Heartbleed.

The risk posed to TQSL users is quite low. The only way that someone
could Heartbleed to attack a TQSL user would be for the attacker to set
up a rogue copy of lotw.arrl.org and somehow get a TQSL user to go there
rather than the ARRL site. That rogue site would then probe TQSL on the
user's PC, hoping to find their password. This is a pretty unlikely
attack, since the straightforward attack, if I can get you to go to a
fake site, would be to simply ask the user for the password rather than
try the unreliable Heartbleed attacks.

There's no practical attack known against client software like TQSL,
unlike the attacks against web servers that have been demonstrated. Also
note that the ONLY data that would be exposed would be TQSL information,
such as certificate passwords and secret keys. Attacking those would
take a lot of work and make no economic sense.

However, even though this is a low-risk for TQSL users, we're making an
updated beta test release available, TQSL 2.0.2-RC1, which uses the
updated OpenSSL, so that this risk can be eliminated.

This release is targeted for Windows users, since the MacOS version of
TQSL uses a version of OpenSSL which is not vulnerable to Heartbleed and
the Linux builds use the OpenSSL supplied with your Linux distribution,
which should have already been patched.
----------------------------
Update 2.0.1-RC9
----------------
There have been two problems reported with 2.0.1-RC8 related to the conversion of the QSO
database.

If you opened TQSL and closed it, the database conversion would be quickly performed. If,
however, you opened TQSL and asked it to sign a log (or ran the command line tool and
submitted a log) a data structure could be freed multiple times, leading to an application
crash.

Also, triggering the conversion by signing a log was very slow.

This release corrects the defect that caused the crash and adjusts the creation of the new
database to significantly improve the performance. I tested on an old Windows 2000 machine,
Celeron 400 MHz processor, and 384 Mb of memory. A moderately large log (12,000 QSOs) would
take several minutes to convert with -RC8 and now converts in less than 3 seconds.
----------------------------
Update to 2.0.1-RC8
-------------------
Since -RC7 was released, two serious problems were reported, which are now corrected in the
-RC8 release.

TQSL did not limit the number of copies of TQSL that can run at the same time. If two copies
of TQSL are running at the same time signing logs, this would result in corrupting the
database that keeps track of processed QSOs.

The QSO database used a storage format that could result in significant performance
degradation when a larg number of QSOs and/or logs were processed, eventually running out of
database resources for very large logs. RC8 will transparently update the QSO database to a
more appropriate format which does not suffer from this performance wall.
----------------------------
Update to 2.0.1-RC7
-----------------------
An updated release candidate for TQSL 2.0.1 is now available. It corrects two serious defects
in RC6 that made it unacceptable for public release.

1. When a callsign certificate is about to expire (within 60 days), TQSL prompts the user if
they want to renew that certificate. This prompt happens even if the user has already
submitted a renewal. If the user clicked "No" to not renew again, TQSL could get stuck in a
loop displaying "Invalid argument" repeatedly.

2. On Linux systems, using the preferences pane to change the directory for automatic backups
behaved very badly (not accepting user selections), and could crash TQSL. As this is a
component of the operating system that TQSL cannot correct, the directory browser is no
longer used on Linux systems (it performs as expected in Windows and MacOS.) For Linux, the
user is presented with a text box for entering the directory name for the backups.

In addition, this release will search for files with .ADI or .ADIF extensions when opening
log files.
----------------------------
Update to 2.0.1RC6
------------------
The changes in this are minor (copyright notice dates, etc.).
The hope for this beta is to progress TQSL 2.0.1 to final; while you're welcome to also test
this release, I don't expect it's going to any different from 2.0.1-RC5.
----------------------------
Update 2.0.1-RC4 to 2.0.1-RC5
----
This release fixes a defect that causes TQSL to crash upon startup if the certificate status
file is empty or cannot be parsed. TQSL has been corrected to delete and re-create that file
if it cannot be used.

In addition, a change was made to how TQSL checks for new releases so that TQSL will offer a
final release over a release candidate even though the version numbers are the same.
----------------------------
Bump 2.0.1RC3 to RC4
--------------------
This release has the following corrections since RC3:

1. Reverted the -RC3 change that converted the Canadian provinces from "PQ" to "QC".
This information is managed internally by LoTW in a form which is not ADIF. Making this
change would have rendered station locations in Quebec and Newfoundland unusable.
LoTW will need to make a correction so that when it exports logs, it exports these as the
ADIF standard "QC" and "NL".

2. Correct a defect in the way the start-up threads were being managed that caused TQSL to
hang on some UNIX variants.

3. Change the way pending callsign requests were being processed to avoid using a function
that fails on OpenSuSE Linux.

4. When signing a log, refuse to use a station location that does not have a valid callsign
certificate associated with the location.

5. Correct a defect that would cause TQSL to hang when certain command line arguments used
empty strings (-p, for example).

6. Update the messages displayed during callsign certificate creation to clarify that the
user should wait for a certificate reply from LoTW, to better explain when signed/unsigned
certificate requests should be used, and to not prompt for a signing certificate if none is
available.
----------------------------
