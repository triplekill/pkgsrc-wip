$NetBSD$

Adding NetBSD support. Setting TARGET, CFLAGS, LDFLAGS, LIBS, etc.

--- source/mupen64plus-core/projects/unix/Makefile.orig	2012-03-10 18:31:29.000000000 +0000
+++ source/mupen64plus-core/projects/unix/Makefile
@@ -47,6 +47,9 @@ endif
 ifneq ("$(filter GNU/kFreeBSD kfreebsd,$(UNAME))","")
   OS = LINUX
 endif
+ifeq ("$(UNAME)","NetBSD")
+  OS = NETBSD
+endif
 ifeq ("$(OS)","NONE")
   $(error OS type "$(UNAME)" not supported.  Please file bug report at 'http://code.google.com/p/mupen64plus/issues')
 endif
@@ -91,9 +94,9 @@ endif
 
 # base CFLAGS, LDLIBS, and LDFLAGS
 OPTFLAGS ?= -O3
-CFLAGS += $(OPTFLAGS) -Wall -ffast-math -fno-strict-aliasing -fvisibility=hidden -I../../src
+CFLAGS += $(OPTFLAGS) -Wall -ffast-math -fno-strict-aliasing -fvisibility=hidden -I../../src $(shell cpuflags)
 CXXFLAGS += -fvisibility-inlines-hidden
-LDLIBS +=  -lm
+LDLIBS += $(shell pkg-config --libs libpng freetype2 gl) -lz -lm
 
 # Since we are building a shared library, we must compile with -fPIC on some architectures
 # On 32-bit x86 systems we do not want to use -fPIC because we don't have to and it has a big performance penalty on this arch
@@ -129,7 +132,7 @@ ifeq ($(OS), LINUX)
   TARGET = libmupen64plus.so.2.0.0
   SONAME = libmupen64plus.so.2
   LDFLAGS += -Wl,-Bsymbolic -shared -Wl,-export-dynamic -Wl,-soname,$(SONAME)
-  LDLIBS += -ldl
+  LDLIBS += ${DL_LIBS}
   # only export api symbols
   LDFLAGS += -Wl,-version-script,$(SRCDIR)/api/api_export.ver
 endif
@@ -137,7 +140,7 @@ ifeq ($(OS), OSX)
   CFLAGS += -DUSE_FILE32API
   TARGET = libmupen64plus.dylib
   LDFLAGS += -bundle -read_only_relocs suppress
-  LDLIBS += -ldl -framework OpenGL
+  LDLIBS += ${DL_LIBS} -framework OpenGL
   ifeq ($(CPU), X86)
     ifeq ($(ARCH_DETECTED), 64BITS)
       CFLAGS += -pipe -arch x86_64 -mmacosx-version-min=10.5 -isysroot /Developer/SDKs/MacOSX10.5.sdk
@@ -151,6 +154,13 @@ ifeq ($(OS), OSX)
     endif
   endif
 endif
+ifeq ($(OS), NETBSD)
+  TARGET = libmupen64plus.so.2.0.0
+  SONAME = libmupen64plus.so.2
+  CFLAGS += -I${PREFIX}/include -I../../src/
+  LDFLAGS += -Wl,-rpath,${LIBDIR} -shared -Wl,-export-dynamic -Wl,-soname,$(SONAME)
+  LIBS += $(shell pkg-config --libs gl glu libpng freetype2) -lz -lm
+endif
 ifeq ($(CPU_ENDIANNESS), BIG)
   CFLAGS += -DM64P_BIG_ENDIAN
 endif
@@ -171,9 +181,6 @@ endif
 ifeq ($(shell pkg-config --modversion libpng 2>/dev/null),)
   $(error No libpng development libraries found!)
 endif
-ifeq ($(shell pkg-config --modversion zlib 2>/dev/null),)
-  $(error No zlib development libraries found!)
-endif
 ifeq ($(shell pkg-config --modversion freetype2 2>/dev/null),)
   $(error No FreeType 2 development libraries found!)
 endif
@@ -212,6 +219,9 @@ else
   ifeq ($(OS),FREEBSD)
     LDCONFIG ?= PATH="$$PATH:/sbin" ldconfig -m
   endif
+  ifeq ($(OS),NETBSD)
+    LDCONFIG ?= true  # no 'ldconfig' under NetBSD
+  endif
 endif
 
 # compiler/linker flags for various compile-time options.
@@ -420,7 +430,8 @@ all: $(TARGET)
 
 install: $(TARGET)
 	$(INSTALL) -d "$(DESTDIR)$(LIBDIR)"
-	$(INSTALL) -m 0644 $(INSTALL_STRIP_FLAG) $(TARGET) "$(DESTDIR)$(LIBDIR)"
+	$(INSTALL) -m 0755 $(INSTALL_STRIP_FLAG) $(TARGET) "$(DESTDIR)$(LIBDIR)"
+	$(INSTALL) -m 0755 $(SONAME) "$(DESTDIR)$(LIBDIR)"
 	$(INSTALL) -d "$(DESTDIR)$(SHAREDIR)"
 	$(INSTALL) -m 0644 ../../data/* "$(DESTDIR)$(SHAREDIR)"
 	$(INSTALL) -d "$(DESTDIR)$(INCDIR)"
