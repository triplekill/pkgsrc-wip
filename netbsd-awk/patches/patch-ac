$NetBSD$

--- run.c.orig	2006-07-26 23:46:37.000000000 +0300
+++ run.c
@@ -61,6 +61,10 @@ void tempfree(Cell *p) {
 #define	FOPEN_MAX	40	/* max number of open files */
 #endif
 
+#ifndef AWK_FOPEN_MAX
+#define AWK_FOPEN_MAX FOPEN_MAX
+#endif
+
 #ifndef RAND_MAX
 #define RAND_MAX	32767	/* all that ansi guarantees */
 #endif
@@ -1644,7 +1648,7 @@ struct files {
 	FILE	*fp;
 	const char	*fname;
 	int	mode;	/* '|', 'a', 'w' => LE/LT, GT */
-} files[FOPEN_MAX] ={
+} files[AWK_FOPEN_MAX] ={
 	{ NULL,  "/dev/stdin",  LT },	/* watch out: don't free this! */
 	{ NULL, "/dev/stdout", GT },
 	{ NULL, "/dev/stderr", GT }
@@ -1665,7 +1669,7 @@ FILE *openfile(int a, const char *us)
 
 	if (*s == '\0')
 		FATAL("null file name in print or getline");
-	for (i=0; i < FOPEN_MAX; i++)
+	for (i=0; i < AWK_FOPEN_MAX; i++)
 		if (files[i].fname && strcmp(s, files[i].fname) == 0) {
 			if (a == files[i].mode || (a==APPEND && files[i].mode==GT))
 				return files[i].fp;
@@ -1675,10 +1679,10 @@ FILE *openfile(int a, const char *us)
 	if (a == FFLUSH)	/* didn't find it, so don't create it! */
 		return NULL;
 
-	for (i=0; i < FOPEN_MAX; i++)
+	for (i=0; i < AWK_FOPEN_MAX; i++)
 		if (files[i].fp == 0)
 			break;
-	if (i >= FOPEN_MAX)
+	if (i >= AWK_FOPEN_MAX)
 		FATAL("%s makes too many open files", s);
 	fflush(stdout);	/* force a semblance of order */
 	m = a;
@@ -1707,7 +1711,7 @@ const char *filename(FILE *fp)
 {
 	int i;
 
-	for (i = 0; i < FOPEN_MAX; i++)
+	for (i = 0; i < AWK_FOPEN_MAX; i++)
 		if (fp == files[i].fp)
 			return files[i].fname;
 	return "???";
@@ -1722,7 +1726,7 @@ Cell *closefile(Node **a, int n)
 	x = execute(a[0]);
 	getsval(x);
 	stat = -1;
-	for (i = 0; i < FOPEN_MAX; i++) {
+	for (i = 0; i < AWK_FOPEN_MAX; i++) {
 		if (files[i].fname && strcmp(x->sval, files[i].fname) == 0) {
 			if (ferror(files[i].fp))
 				WARNING( "i/o error occurred on %s", files[i].fname );
@@ -1748,7 +1752,7 @@ void closeall(void)
 {
 	int i, stat;
 
-	for (i = 0; i < FOPEN_MAX; i++) {
+	for (i = 0; i < AWK_FOPEN_MAX; i++) {
 		if (files[i].fp) {
 			if (ferror(files[i].fp))
 				WARNING( "i/o error occurred on %s", files[i].fname );
@@ -1766,7 +1770,7 @@ void flush_all(void)
 {
 	int i;
 
-	for (i = 0; i < FOPEN_MAX; i++)
+	for (i = 0; i < AWK_FOPEN_MAX; i++)
 		if (files[i].fp)
 			fflush(files[i].fp);
 }
