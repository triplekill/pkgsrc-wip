$NetBSD$

--- pty.c.orig	2003-05-11 14:28:53.000000000 +0200
+++ pty.c	2004-06-07 18:46:44.000000000 +0200
@@ -11,10 +11,17 @@
  * a null pointer and ignored everywhere.
  */
 
+#define _GNU_SOURCE
+
+#ifdef __linux__
 #define _XOPEN_SOURCE
 #define _XOPEN_SOURCE_EXTENDED
-#define _GNU_SOURCE
 #include <features.h>
+#include <utmp.h>
+#else
+#include <utmpx.h>
+#include <sys/param.h>
+#endif
 
 #include <stdio.h>
 #include <stdlib.h>
@@ -24,7 +31,6 @@
 #include <fcntl.h>
 #include <termios.h>
 #include <grp.h>
-#include <utmp.h>
 #include <pwd.h>
 #include <time.h>
 #include <sys/types.h>
@@ -63,11 +69,6 @@
  * OMIT_UTMP if you didn't want any. Currently HAVE_PUTUTLINE is
  * the only such symbol.
  */
-#ifndef OMIT_UTMP
-#if !defined HAVE_PUTUTLINE
-#define HAVE_PUTUTLINE
-#endif
-#endif
 
 static Config pty_cfg;
 static int pty_master_fd;
@@ -81,7 +82,11 @@
 static int pty_child_dead, pty_finished;
 static int pty_exit_code;
 #ifndef OMIT_UTMP
+#  ifdef BSD
+static struct utmpx utmp_entry;
+#  else
 static struct utmp utmp_entry;
+#  endif
 #endif
 char **pty_argv;
 int use_pty_argv = TRUE;
@@ -106,7 +111,9 @@
     strncpy(utmp_entry.ut_id, ttyname+8, lenof(utmp_entry.ut_id));
     strncpy(utmp_entry.ut_user, pw->pw_name, lenof(utmp_entry.ut_user));
     strncpy(utmp_entry.ut_host, location, lenof(utmp_entry.ut_host));
+#ifndef BSD
     time(&utmp_entry.ut_time);
+#endif
 
 #if defined HAVE_PUTUTLINE
     utmpname(UTMP_FILE);
@@ -147,7 +154,9 @@
 
     utmp_entry.ut_type = DEAD_PROCESS;
     memset(utmp_entry.ut_user, 0, lenof(utmp_entry.ut_user));
+#ifndef BSD
     time(&utmp_entry.ut_time);
+#endif
 
     if ((wtmp = fopen(WTMP_FILE, "a")) != NULL) {
 	fwrite(&utmp_entry, 1, sizeof(utmp_entry), wtmp);
@@ -155,7 +164,9 @@
     }
 
     memset(utmp_entry.ut_line, 0, lenof(utmp_entry.ut_line));
+#ifndef BSD
     utmp_entry.ut_time = 0;
+#endif
 
 #if defined HAVE_PUTUTLINE
     utmpname(UTMP_FILE);
@@ -567,9 +578,17 @@
 	ioctl(slavefd, TIOCSCTTY, 1);
 	pgrp = getpid();
 	tcsetpgrp(slavefd, pgrp);
+#ifdef BSD
+	setpgrp(pgrp, -1);
+#else
 	setpgrp();
+#endif
 	close(open(pty_name, O_WRONLY, 0));
+#ifdef BSD
+	setpgrp(pgrp, -1);
+#else
 	setpgrp();
+#endif
 	/* Close everything _else_, for tidiness. */
 	for (i = 3; i < 1024; i++)
 	    close(i);
