$NetBSD$

--- configure.orig	2006-11-09 00:21:31.000000000 +0100
+++ configure
@@ -6568,7 +6568,7 @@ cat >>confdefs.h <<\_ACEOF
 #define dDOUBLE
 _ACEOF
 
-if test "$build_os" == "$target_os"
+if test "$build_os" = "$target_os"
 then
 if test "$cross_compiling" = yes; then
   { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
@@ -6754,7 +6754,7 @@ cat >>confdefs.h <<\_ACEOF
 #define dSINGLE
 _ACEOF
 
-if test "$build_os" == "$target_os"
+if test "$build_os" = "$target_os"
 then
 if test "$cross_compiling" = yes; then
   { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
@@ -7092,16 +7092,16 @@ fi
 
 echo "$as_me:$LINENO: checking for appropriate dEpsilon constant" >&5
 echo $ECHO_N "checking for appropriate dEpsilon constant... $ECHO_C" >&6
-if test "x$have_float_h" == xyes
+if test "x$have_float_h" = xyes
 then
-if test $precision == yes
+if test $precision = yes
 then
 dEpsilon=DBL_EPSILON
 else
 dEpsilon=FLT_EPSILON
 fi
 else
-if test $precision == yes
+if test $precision = yes
 then
 dEpsilon=2.2204460492503131e-16
 else
@@ -7117,7 +7117,7 @@ echo "$as_me:$LINENO: result: $dEpsilon"
 echo "${ECHO_T}$dEpsilon" >&6
 
 
-if test "$build_os" == "$target_os"
+if test "$build_os" = "$target_os"
 then
 echo "$as_me:$LINENO: checking for a Pentium CPU" >&5
 echo $ECHO_N "checking for a Pentium CPU... $ECHO_C" >&6
@@ -7168,7 +7168,7 @@ fi
 else
 pentium=no
 fi
-if test "x$pentium" == xyes
+if test "x$pentium" = xyes
 then
 
 cat >>confdefs.h <<\_ACEOF
@@ -7181,7 +7181,7 @@ echo "${ECHO_T}$pentium" >&6
 
 echo "$as_me:$LINENO: checking for a x86-64 CPU" >&5
 echo $ECHO_N "checking for a x86-64 CPU... $ECHO_C" >&6
-if test "$build_os" == "$target_os"
+if test "$build_os" = "$target_os"
 then
 if test "$cross_compiling" = yes; then
   { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
@@ -7233,7 +7233,7 @@ fi
 else
 cpu64=no
 fi
-if test "x$cpu64" == xyes
+if test "x$cpu64" = xyes
 then
 
 cat >>confdefs.h <<\_ACEOF
@@ -7263,7 +7263,7 @@ if test "${enable_release+set}" = set; t
 else
   release=no
 fi;
-if test "x$release" == xyes
+if test "x$release" = xyes
 then
     CFLAGS="-fomit-frame-pointer -ffast-math"
     CPPFLAGS="-fomit-frame-pointer -ffast-math"
@@ -7286,7 +7286,7 @@ if test "${enable_debug+set}" = set; the
 else
   debug=no
 fi;
-if test "x$debug" == xyes
+if test "x$debug" = xyes
 then
     CFLAGS="-g"
     CPPFLAGS="-g"
@@ -10736,7 +10736,7 @@ _ACEOF
 fi
 done
 
-if test "$build_os" == "$target_os"
+if test "$build_os" = "$target_os"
 then
 # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works
 # for constant arguments.  Useless!
