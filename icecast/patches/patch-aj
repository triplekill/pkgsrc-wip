$NetBSD$
--- src/source.c.orig	Mon Aug 12 16:10:44 2002
+++ src/source.c	Mon Aug 12 16:08:31 2002
@@ -1,3 +1,9 @@
+/**
+  *
+  * pancake - add a function to test passwords ...must be -lcrypt? ooouh yeaah xD
+  *
+  **/
+
 /* source.c
  * - Source functions
  * Copyright (c) 1999 Jack Moffitt, Barath Raghavan, and Alexander Haväng
@@ -88,6 +94,57 @@
 
 extern int running;
 extern server_info_t info;
+ 
+int multiple_login_check(char *mp,char *pw)
+{       /* mountpoint, password */
+	FILE *fd=0;
+	char *buf;
+	int ret=RET_ERR; 
+
+	buf=malloc( BUF_SIZE * sizeof(char) );
+
+	//fd=fopen("/etc/icecast/multiple.auth","r");
+	fd=fopen(info.multiple_sources_file,"r");
+	if (!fd)
+	{
+	         write_log (LOG_DEFAULT, "Cannot get read permisions to multiple sources auth file : %s", 
+			   info.multiple_sources_file);
+		 ret = RET_ERR;
+	         goto end;
+	}
+
+	while(!feof(fd))
+	{
+		fgets (buf, BUF_SIZE, fd);
+		{
+		int i=0,j=0;
+
+//		while(buf[i]==' '&&i<BUF_SIZE) i++; //treure els espais del mig		
+		while(buf[i]!=' '&&i<BUF_SIZE) i++; //buscar el final del login (mountpoint)
+		buf[i]=0;
+		while(buf[++i]==' '&&j<BUF_SIZE); //treure els espais del mig
+		while(buf[j++]!='\n'&&j<BUF_SIZE );
+		buf[j-1]=0;
+		
+		if (strlen(buf)==strlen(mp) && strlen(buf+i)==strlen(pw) )
+			{
+			 if (  !strncmp( buf,   mp, strlen(buf))   && 
+		      	       !strncmp( buf+i, pw, strlen(buf+i))  )
+			      {
+	    		       ret=RET_OK;
+		               goto end_fd;
+		              }
+			}
+		}
+	}
+
+	end_fd:
+	fclose(fd);
+	end:
+	free(buf);
+	return ret; /* OK */
+}
+
 
 void source_login(connection_t *con, char *expr)
 {
@@ -196,13 +253,6 @@
 				return;
 			}
 			
-			if (!password_match(info.encoder_pass, pass)) {
-				sock_write_line (con->sock, "ERROR - Bad Password\r\n");
-				kick_connection (con, "Bad Password");
-				return;
-			} else
-				password_accepted = 1;
-			
 			if (!source->audiocast.mount)
 				source->audiocast.mount = my_strdup(arg);
 
@@ -215,6 +265,26 @@
 					source->audiocast.mount = my_strdup (slash);
 				}
 			}
+			
+			if (info.multiple_sources)
+			{
+			 /* check password */
+ 		          if (!multiple_login_check(source->audiocast.mount, pass))
+ 		             {
+			     sock_write_line(con->sock,"ERROR - Bad Password\r\n");
+			     kick_connection (con, "Bad Password");
+			     connected = 0;
+			     return;
+			     }
+			}
+			else
+			if (!password_match(info.encoder_pass, pass)) {
+				sock_write_line (con->sock, "ERROR - Bad Password\r\n");
+				kick_connection (con, "Bad Password");
+				return;
+			} 
+			
+			password_accepted = 1;
 			
 			if (mount_exists (source->audiocast.mount) || (source->audiocast.mount[0] == '\0')) {
 				sock_write_line (con->sock, "ERROR - Mount Point Taken or Invalid\r\n");
