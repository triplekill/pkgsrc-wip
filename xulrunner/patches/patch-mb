$NetBSD$

--- xpcom/reflect/xptcall/src/md/unix/Makefile.in.orig	2009-11-25 05:13:10.000000000 +0100
+++ xpcom/reflect/xptcall/src/md/unix/Makefile.in
@@ -76,7 +76,7 @@ endif
 endif
 endif
 
-ifneq (,$(filter FreeBSD NetBSD OpenBSD BSD_OS,$(OS_ARCH)))
+ifneq (,$(filter FreeBSD DragonFly NetBSD OpenBSD BSD_OS,$(OS_ARCH)))
 ifeq (86,$(findstring 86,$(OS_TEST)))
 CPPSRCS		:= xptcinvoke_unixish_x86.cpp xptcstubs_unixish_x86.cpp
 endif
@@ -108,12 +108,28 @@ endif
 ifeq ($(OS_ARCH)$(OS_TEST),OpenBSDx86_64)
 CPPSRCS		:= xptcinvoke_amd64_openbsd.cpp xptcstubs_amd64_openbsd.cpp
 endif
+
+#
+# NetBSD/amd64
+#
+ifeq ($(OS_ARCH)$(OS_TEST),NetBSDx86_64)
+CPPSRCS		:= xptcinvoke_amd64_openbsd.cpp xptcstubs_amd64_openbsd.cpp
+endif
+
 #
 # FreeBSD/amd64
 #
 ifeq ($(OS_ARCH)$(OS_TEST),FreeBSDx86_64)
 CPPSRCS		:= xptcinvoke_amd64_linux.cpp xptcstubs_amd64_linux.cpp
 endif
+
+#
+# DragonFlyBSD/amd64
+#
+ifeq ($(OS_ARCH)$(OS_TEST),DragonFlyx86_64)
+CPPSRCS		:= xptcinvoke_amd64_linux.cpp xptcstubs_amd64_linux.cpp
+endif
+
 #
 # BeOS/Intel (uses the same unixish_x86 code)
 #
@@ -200,7 +216,7 @@ endif
 # NetBSD/ARM
 #
 ifeq ($(OS_ARCH),NetBSD)
-ifneq (,$(filter arm% sa110,$(OS_TEST)))
+ifneq (,$(filter arm%,$(TARGET_CPU)))
 CPPSRCS		:= xptcinvoke_arm_netbsd.cpp xptcstubs_arm_netbsd.cpp
 endif
 endif
@@ -255,7 +271,7 @@ endif
 # NetBSD/m68k
 #
 ifeq ($(OS_ARCH),NetBSD)
-ifneq (,$(filter amiga atari hp300 mac68k mvme68k next68k sun3 sun3x x68k,$(OS_TEST)))
+ifneq (,$(filter m68k,$(TARGET_CPU)))
 CPPSRCS		:= xptcinvoke_netbsd_m68k.cpp xptcstubs_netbsd_m68k.cpp
 endif
 endif
@@ -340,9 +356,10 @@ endif
 #
 # NetBSD/PPC
 #
-ifneq (,$(filter NetBSDmacppc NetBSDbebox NetBSDofppc NetBSDprep NetBSDamigappc,$(OS_ARCH)$(OS_TEST)))                           
+ifeq ($(OS_ARCH)$(OS_TEST),NetBSDpowerpc)
 CPPSRCS		:= xptcinvoke_ppc_netbsd.cpp xptcstubs_ppc_netbsd.cpp
 ASFILES		:= xptcinvoke_asm_ppc_netbsd.s xptcstubs_asm_ppc_netbsd.s
+AS		:= $(CC) -c -x assembler-with-cpp
 endif
 
 #
@@ -414,6 +431,13 @@ CPPSRCS		:= xptcinvoke_sparc64_openbsd.c
 ASFILES		:= xptcinvoke_asm_sparc64_openbsd.s xptcstubs_asm_sparc64_openbsd.s
 endif
 #
+# NetBSD/SPARC64
+#
+ifeq ($(OS_ARCH)$(OS_TEST),NetBSDsparc64)
+CPPSRCS		:= xptcinvoke_sparc64_netbsd.cpp xptcstubs_sparc64_netbsd.cpp
+ASFILES		:= xptcinvoke_asm_sparc64_netbsd.s xptcstubs_asm_sparc64_netbsd.s
+endif
+#
 # Solaris/SPARC
 #
 ifeq ($(OS_ARCH),SunOS)
