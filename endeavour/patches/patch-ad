$NetBSD$

--- endeavour2/edv_devices_list.c.orig	2008-02-02 17:00:00.000000000 -0500
+++ endeavour2/edv_devices_list.c
@@ -9,6 +9,9 @@
 #elif defined(__SOLARIS__)
 # include <sys/mnttab.h>
 # include <sys/vfstab.h>
+#elif defined(__NetBSD__)
+# include <fstab.h>
+# include <sys/statvfs.h>
 #else
 # include <mntent.h>
 # include <sys/vfs.h>
@@ -281,7 +284,7 @@ GList *EDVDevicesListOpenFromSystem(
 {
 	FILE *fp;
 	struct stat stat_buf;
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 	struct fstab *fs_ptr;
 #elif defined(__SOLARIS__)
 	struct vfstab *vfs_ptr;
@@ -293,7 +296,7 @@ GList *EDVDevicesListOpenFromSystem(
 	edv_device_struct *d;
 
 	/* Open the system's devices list file */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 	setfsent();
 	fp = fopen("/etc/fstab", "rb");
 #elif defined(__SOLARIS__)
@@ -318,7 +321,7 @@ GList *EDVDevicesListOpenFromSystem(
 	    );
 
 	/* Begin reading the system's devices list file */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 	fs_ptr = getfsent();
 	while(fs_ptr != NULL)
 #elif defined(__SOLARIS__)
@@ -346,7 +349,7 @@ GList *EDVDevicesListOpenFromSystem(
 	     * confusing, let the Endeavour Devices List file
 	     * describe these instead
 	     */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 	    if(!g_strcasecmp(fs_ptr->fs_spec, "none"))
 	    {
 		/* Get the next mount entry */
@@ -383,7 +386,7 @@ GList *EDVDevicesListOpenFromSystem(
 	    d = EDVDevicesListMatchDevicePath(
 		devices_list,
 		NULL,				/* No index return */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 		fs_ptr->fs_spec			/* Device Path */
 #elif defined(__SOLARIS__)
 		vfs_ptr->vfs_special		/* Device Path */
@@ -397,7 +400,7 @@ GList *EDVDevicesListOpenFromSystem(
 
 		/* Filesystem Type */
 		g_free(d->fs_type_name);
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 		d->fs_type_name = STRDUP(fs_ptr->fs_vfstype);
 #elif defined(__SOLARIS__)
 		d->fs_type_name = STRDUP(vfs_ptr->vfs_fstype);
@@ -408,7 +411,7 @@ GList *EDVDevicesListOpenFromSystem(
 
 		/* Mount Path */
 		g_free(d->mount_path);
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 		d->mount_path = STRDUP(fs_ptr->fs_file);
 #elif defined(__SOLARIS__)
 		d->mount_path = STRDUP(vfs_ptr->vfs_mountp);
@@ -431,7 +434,7 @@ GList *EDVDevicesListOpenFromSystem(
 		    );
 
 		    /* Get the device path, mount path, and filesystem */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 		    d->device_path = STRDUP(fs_ptr->fs_spec);
 		    d->mount_path = STRDUP(fs_ptr->fs_file);
 		    d->fs_type_name = STRDUP(fs_ptr->fs_vfstype);
@@ -447,7 +450,7 @@ GList *EDVDevicesListOpenFromSystem(
 		    d->fs_type_code = EDVFSTypeGetCodeFromName(d->fs_type_name);
 
 		    /* Get the options */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 		    /* Not yet supported */
 #elif defined(__SOLARIS__)
 		    /* Not yet supported */
@@ -570,7 +573,7 @@ GList *EDVDevicesListOpenFromSystem(
 	    }
 
 	    /* Get the next mount entry */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 	    fs_ptr = getfsent();
 #elif defined(__SOLARIS__)
 	    mtback = getmntent(fp, vfs_ptr);
@@ -581,7 +584,7 @@ GList *EDVDevicesListOpenFromSystem(
 
 
 	/* Close the system's devices list file */
-#if defined(__FreeBSD__)
+#if defined(__FreeBSD__)||defined(__NetBSD__)
 	endfsent();
 	fclose(fp);
 #elif defined(__SOLARIS__)
@@ -667,7 +670,7 @@ void EDVDevicesListUpdateStats(GList *de
 	    mount_path = d->mount_path;
 	    if(EDV_DEVICE_IS_MOUNTED(d) && !STRISEMPTY(mount_path))
 	    {
-#if defined(__SOLARIS__)
+#if defined(__SOLARIS__)||defined(__NetBSD__)
 		struct statvfs buf;
 		if(!statvfs((const char *)mount_path, &buf))
 #else
@@ -709,7 +712,11 @@ void EDVDevicesListUpdateStats(GList *de
 #else
 		    d->fs_id = 0;
 #endif
+#if defined(__NetBSD__)
+		    d->name_length_max = (gulong)buf.f_namemax;
+#else
 		    d->name_length_max = (gulong)buf.f_namelen;
+#endif
 		}
 	    }
 	}
