$NetBSD$

--- src/airodump-ng.c.orig	2007-06-25 21:56:30.000000000 +0200
+++ src/airodump-ng.c
@@ -19,7 +19,8 @@
  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
 
-#if !(defined(linux) || defined(__FreeBSD__) || defined( __FreeBSD_kernel__))
+#if !(defined(linux) || defined(__FreeBSD__) || defined( __FreeBSD_kernel__) \
+    || defined(__NetBSD__))
     #warning Airodump-ng could fail on this OS
 #endif
 
@@ -40,7 +41,7 @@
     #include <linux/wireless.h>
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     #include <sys/sysctl.h>
     #include <net/bpf.h>
     #include <net/if.h>
@@ -289,7 +290,7 @@ struct globals
     char * wlanctlng;
     char * wl;
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     int s_ioctl;
 #endif
 
@@ -1765,7 +1766,7 @@ int getBatteryState()
             closedir(batteries);
     }
     return batteryTime;
-#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     int value;
     size_t len;
 
@@ -2615,7 +2616,7 @@ int set_channel( char *interface, int fd
 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
 /*
     this function, as a few others, presents a slightly
     reduced set of parameters, because we don't need some
@@ -2624,7 +2625,11 @@ int set_channel( char *interface, int fd
 */
 int set_channel( char *interface, int channel )
 {
+#if defined(__NetBSD__)
+    struct ieee80211chanreq ifr;
+#else
     struct ieee80211req ifr;
+#endif
 
     if (G.s_ioctl == -1)
     {
@@ -2636,17 +2641,29 @@ int set_channel( char *interface, int ch
     }
 
     strncpy( ifr.i_name, interface, IFNAMSIZ - 1 );
-    ifr.i_type = IEEE80211_IOC_CHANNEL;
 
+#if defined(__NetBSD__)
+    if ( ioctl( G.s_ioctl, SIOCG80211CHANNEL, &ifr ) == -1 )
+#else
+    ifr.i_type = IEEE80211_IOC_CHANNEL;
     if ( ioctl( G.s_ioctl, SIOCG80211, &ifr ) == -1 )
+#endif
     {
 		perror( "ioctl(SIOCG80211) failed" );
 		return( 1 );
     }
 
+#if defined(__NetBSD__)
+    ifr.i_channel = channel;
+#else
     ifr.i_val = channel;
+#endif
 
+#if defined(__NetBSD__)
+    if ( ioctl( G.s_ioctl, SIOCS80211CHANNEL, &ifr ) == -1 )
+#else
     if ( ioctl( G.s_ioctl, SIOCS80211, &ifr ) == -1 )
+#endif
     {
 		perror( "ioctl(SIOCS80211) failed" );
 		return( 1 );
@@ -2725,7 +2742,7 @@ int set_monitor( char *interface, int fd
 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
 /*
     this function, as a few others, presents a slightly
     reduced set of parameters, because we don't need some
@@ -2873,13 +2890,20 @@ int set_monitor( char *interface, int ca
 		return( 1 );
     }
 
-    i = ( ifr.ifr_flags & 0xffff ) | ( ifr.ifr_flagshigh << 16 );
+    i = ( ifr.ifr_flags & 0xffff )
+#if !defined(__NetBSD__)
+        | ( ifr.ifr_flagshigh << 16 )
+#endif
+    ;
+
     if( !( i & IFF_UP ) )
     {
 		i |= IFF_UP;
 
 		ifr.ifr_flags = i & 0xffff;
+#if !defined(__NetBSD__)
 		ifr.ifr_flagshigh = i >> 16;
+#endif
 
 		if ( ioctl( s, SIOCSIFFLAGS, &ifr ) == -1 )
 		{
@@ -3015,7 +3039,7 @@ void channel_hopper( char *interface[], 
 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
 /*
     this function, as a few others, presents a slightly
     reduced set of parameters, because we don't need some
@@ -3459,7 +3483,7 @@ int setup_card(char *iface, struct ifreq
 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
 /*
     this function, as a few others, presents a slightly
     reduced set of parameters, because we don't need some
@@ -3503,12 +3527,14 @@ int setup_card(char *iface, struct ifreq
 	return( 1 );
     }
 
+#if !defined(__NetBSD__)
     /* lock bpf for further messing */
     if( ioctl( *fd_raw, BIOCLOCK, NULL ) == -1 )
     {
 	perror( "ioctl(BIOCLOCK) failed" );
 	return( 1 );
     }
+#endif
 
     /* set monitor mode in interface iface */
     if( set_monitor( iface, cardnum ) == 1 )
@@ -3541,7 +3567,7 @@ int init_cards(const char* cardstr, char
 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
 /*
     this function, as a few others, presents a slightly
     reduced set of parameters, because we don't need some
@@ -3622,7 +3648,7 @@ int main( int argc, char *argv[] )
     int freq [2];
     time_t tt1, tt2, tt3, start_time;
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     int j, k;
     char *bnbuf;
     unsigned int buf;
@@ -3694,13 +3720,13 @@ int main( int argc, char *argv[] )
     G.update_s     =  0;
     memset(G.sharedkey, '\x00', 512*3);
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     G.s_ioctl = -1;
 #endif
 
     gettimeofday( &tv0, NULL );
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     /* cast to accomodate a warning on FreeBSD 6-stable */
     lt = localtime( (time_t *) &tv0.tv_sec );
 #else
@@ -4038,7 +4064,7 @@ usage:
     }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     /*
 	since under FreeBSD the socktype PF_PACKET is not available
 	we have to read our frames from a BPF, with a few consequences
@@ -4116,7 +4142,7 @@ usage:
     /* initialize cards */
 #if defined(linux)
     cards = init_cards(argv[argc-1], iface, ifr, mr, sll, fd_raw, arptype);
-#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
     cards = init_cards(argv[argc-1], iface, ifr, fd_raw);
 #endif
 
@@ -4139,7 +4165,7 @@ usage:
 		{
 #if defined(linux)
             channel_hopper( iface, fd_raw, cards, chan_count );
-#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
             channel_hopper( iface, cards, chan_count );
 #endif
             exit( 1 );
@@ -4151,7 +4177,7 @@ usage:
 		{
 #if defined(linux)
             set_channel( iface[i], fd_raw[i], G.channel[0], i );
-#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#elif defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
             set_channel( iface[i], G.channel[0] );
 #endif
 
@@ -4339,7 +4365,7 @@ usage:
                 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
                 memset( buffer, 0, buflen );
 
 		/* buffer size have to be as big as BPF buffer */
@@ -4424,7 +4450,7 @@ usage:
                 }
 #endif /* linux */
 
-#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined( __FreeBSD_kernel__) || defined(__NetBSD__)
 		/*
 		    radiotap under FreeBSD is well defined and decently
 		    supported from any driver that actually can support
