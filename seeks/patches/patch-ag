$NetBSD$

--- src/proxy/spsockets.cpp.orig	2010-06-12 13:26:07.000000000 +0000
+++ src/proxy/spsockets.cpp
@@ -85,11 +85,15 @@
 #include "errlog.h"
 #include "miscutil.h"
 
-/* Mac OSX doesn't define AI_NUMERICSESRV */
 #ifndef AI_NUMERICSERV
 #define AI_NUMERICSERV 0
 #endif
 
+/* Mac OSX doesn't define AI_NUMERICSESRV */
+#ifndef AI_ADDRCONFIG
+#define AI_ADDRCONFIG 0
+#endif
+
 /*
  * Maximum number of gethostbyname(_r) retries in case of
  * soft errors (TRY_AGAIN).
@@ -892,10 +896,10 @@ void spsockets::get_host_information(sp_
          host = NULL;
       }
 #elif defined(MUTEX_LOCKS_AVAILABLE)
-      seeks_proxy::mutex_lock(&resolver_mutex);
+      seeks_proxy::mutex_lock(&seeks_proxy::_resolver_mutex);
       host = gethostbyaddr((const char *)&server.sin_addr, 
                            sizeof(server.sin_addr), AF_INET);
-      seeks_proxy::mutex_unlock(&resolver_mutex);
+      seeks_proxy::mutex_unlock(&seeks_proxy::_resolver_mutex);
 #else
       host = gethostbyaddr((const char *)&server.sin_addr, 
                            sizeof(server.sin_addr), AF_INET);
@@ -1064,7 +1068,7 @@ unsigned long spsockets::resolve_hostnam
          hostp = NULL;
       }
 #elif defined(MUTEX_LOCKS_AVAILABLE)
-      seeks_proxy::mutex_lock(&resolver_mutex);
+      seeks_proxy::mutex_lock(&seeks_proxy::_resolver_mutex);
       while (NULL == (hostp = gethostbyname(host))
              && (h_errno == TRY_AGAIN) && (dns_retries++ < MAX_DNS_RETRIES))
       {   
@@ -1072,7 +1076,7 @@ unsigned long spsockets::resolve_hostnam
 			   "Timeout #%u while trying to resolve %s. Trying again.",
 			   dns_retries, host);
       }
-      seeks_proxy::mutex_unlock(&resolver_mutex);
+      seeks_proxy::mutex_unlock(&seeks_proxy::_resolver_mutex);
 #else
       while (NULL == (hostp = gethostbyname(host))
              && (h_errno == TRY_AGAIN) && (dns_retries++ < MAX_DNS_RETRIES))
