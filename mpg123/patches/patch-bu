$NetBSD$

--- src/mpg123.c.orig	2007-06-03 19:43:01.000000000 -0400
+++ src/mpg123.c
@@ -6,8 +6,6 @@
 	initially written by Michael Hipp
 */
 
-#include "config.h"
-#include "debug.h"
 #define ME "main"
 #include "mpg123.h"
 
@@ -33,7 +31,7 @@
 
 /* be paranoid about setpriority support */
 #ifndef PRIO_PROCESS
-#undef HAVE_SETPRIORIT
+#undef HAVE_SETPRIORITY
 #endif
 
 #include "common.h"
@@ -109,6 +107,8 @@ struct parameter param = { 
 #ifdef FIFO
 	,NULL
 #endif
+	,0
+	,1
 };
 
 char *prgName = NULL;
@@ -126,10 +126,12 @@ static int intflag = FALSE;
 int OutputDescriptor;
 
 #if !defined(WIN32) && !defined(GENERIC)
+#ifndef NOXFERMEM
 static void catch_child(void)
 {
   while (waitpid(-1, NULL, WNOHANG) > 0);
 }
+#endif
 
 static void catch_interrupt(void)
 {
@@ -435,6 +437,8 @@ topt opts[] = {
 #ifdef FIFO
 	{0, "fifo", GLO_ARG | GLO_CHAR, 0, &param.fifo,  0},
 #endif
+	{0, "timeout", GLO_ARG | GLO_LONG, 0, &param.timeout, 0},
+	{0, "loop", GLO_ARG | GLO_LONG, 0, &param.loop, 0},
 	{0, 0, 0, 0, 0, 0}
 };
 
@@ -1189,6 +1193,8 @@ static void long_usage(int err)
 	fprintf(o," -u     --auth             set auth values for HTTP access\n");
 	fprintf(o," -@ <f> --list <f>         play songs in playlist <f> (plain list, m3u, pls (shoutcast))\n");
 	fprintf(o," -l <n> --listentry <n>    play nth title in playlist; show whole playlist for n < 0\n");
+	fprintf(o,"        --loop <n>         loop track(s) <n> times, < 0 means infinite loop (not with --random!)\n");
+	fprintf(o,"        --timeout <n>      Timeout in seconds before declaring a stream dead (if <= 0, wait forever)\n");
 	fprintf(o," -z     --shuffle          shuffle song-list before playing\n");
 	fprintf(o," -Z     --random           full random play\n");
 
