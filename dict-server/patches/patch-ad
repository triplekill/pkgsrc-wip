$NetBSD$

--- index.c.orig	2007-05-28 21:12:33.000000000 +0300
+++ index.c
@@ -235,11 +235,9 @@ static int compare_allchars(
 
    PRINTF(DBG_SEARCH,("   We are inside index.c:compare_allchars\n"));
 
-   while (*word && *word != '\t' && start < end && *start != '\t') {
-//      if (!isspacealnum(*start)) {
-//	 ++start;
-//	 continue;
-//      }
+   while (*word && *word != '\t' && *word != '\n' &&
+        start < end && *start != '\t' && *start != '\n')
+   {
 #if 0
       if (isspace( (unsigned char) *start ))
 	 c2 = ' ';
@@ -271,7 +269,12 @@ static int compare_allchars(
       ++start;
    }
 
-   result = (*word && *word != '\t' ? 1 : ((*start != '\t') ? -1 : 0));
+   if (*word && *word != '\t' && *word != '\n')
+      result = 1;
+   else if (*start != '\t' && *start != '\n')
+      result = -1;
+   else
+      result = 0;
 
    PRINTF(DBG_SEARCH,("   result = %d\n", result));
    return  result;
@@ -291,7 +294,9 @@ static int compare_alnumspace(
    PRINTF(DBG_SEARCH,("   We are inside index.c:compare_alnumspace\n"));
 
    /* FIXME.  Optimize this inner loop. */
-   while (*word && *word != '\t' && start < end && *start != '\t') {
+   while (*word && *word != '\t' && *word != '\n' &&
+	  start < end && *start != '\t' && *start != '\n')
+   {
       if (!dbindex -> isspacealnum[* (const unsigned char *) start]) {
 	 ++start;
 	 continue;
@@ -339,13 +344,18 @@ static int compare_alnumspace(
    }
 
    while (
-       *start != '\t' &&
+       *start != '\t' && *start != '\n' &&
        !dbindex -> isspacealnum[* (const unsigned char *) start])
    {
       ++start;
    }
 
-   ret = *word && *word != '\t' ? 1 : ((*start != '\t') ? -1 : 0);
+   if (*word && *word != '\t' && *word != '\n')
+      ret = 1;
+   else if (*start != '\t' && *start != '\n')
+      ret = -1;
+   else
+      ret = 0;
 
    PRINTF(DBG_SEARCH,("   result = %d\n", ret));
 
@@ -403,6 +413,53 @@ static int compare(
    }
 }
 
+static int dict_entry_is_4column (
+   const char *entry, const char *index_end)
+{
+   int tab_count = 0;
+
+   for (; entry < index_end; ++entry){
+      switch (*entry){
+      case '\t':
+	 ++tab_count;
+	 break;
+      case '\n':
+	 switch (tab_count){
+	 case 2:
+	    return 0;
+	 case 3:
+	    return 1;
+	 default:
+	    goto err;
+	 }
+      }
+   }
+
+ err:
+   err_fatal (__func__, "bad .index file");
+}
+
+static int compare_1or4 (
+   const char *word,
+   const dictIndex *dbindex,
+   const char *start, const char *end,
+   const char **column_1or4)
+{
+   if (dict_entry_is_4column (start, end)){
+      while (start < end && *start != '\t')
+	 ++start;
+      ++start;
+      while (start < end && *start != '\t')
+	 ++start;
+      ++start;
+   }
+
+   if (column_1or4)
+      *column_1or4 = start;
+
+   return compare (word, dbindex, start, end);
+}
+
 static const char *binary_search(
     const char *word,
     const dictIndex *dbindex,
@@ -730,13 +787,11 @@ static int dict_search_exact( lst_List l
    while (pt && pt < dbindex->end) {
       if (!compare( word, dbindex, pt, dbindex->end )) {
 	 if (!uniq_only || !previous
-	     || compare(previous, dbindex, pt, dbindex->end))
+	     || compare_1or4 (previous, dbindex, pt, dbindex->end, &previous))
 	 {
 	    ++count;
 	    if (l){
-	       if (!dict_add_word_to_list
-		   (l, database, dbindex, previous = pt))
-	       {
+	       if (!dict_add_word_to_list (l, database, dbindex, pt)) {
 		  break;
 	       }
 	    }
@@ -786,7 +841,10 @@ static int dict_search_prefix_first( lst
 	    return count;
 	 case -1:
 	 case 0:
-	    if (!previous || compare(previous, dbindex, pt, dbindex->end)) {
+	    if (!previous
+		|| compare_1or4 (previous, dbindex, pt, dbindex->end,
+				 &previous))
+	    {
 	       if (flag == BMH_FIRST){
 		  c = (unsigned char) pt [wordlen];
 		  if (c != '\t' && !isspacepuncttab [c])
@@ -807,7 +865,6 @@ static int dict_search_prefix_first( lst
 		  --skip_count;
 	       }
 	    }
-	    previous = pt;
 	    break;
 	 case 1:
 	    return count;
@@ -907,11 +964,13 @@ static int dict_search_brute( lst_List l
 	       if (*pt == '\t')
 		  goto continue2;
 
-	    if (!previous || compare(previous, dbindex, pt + 1, end)) {
+	    if (!previous || compare_1or4 (previous, dbindex, pt + 1, end,
+					   &previous))
+	    {
 	       ++count;
 
 	       if (!dict_add_word_to_list
-		   (l, database, dbindex, previous = pt + 1))
+		   (l, database, dbindex, pt + 1))
 	       {
 		  break;
 	       }
@@ -952,7 +1011,7 @@ static int dict_search_bmh( lst_List l,
    int        count = 0;
    const unsigned char *f = NULL; /* Boolean flag, but has to be a pointer */
    const unsigned char *wpt;
-   const unsigned char *previous = NULL;
+   const char *previous = NULL;
 
    assert (dbindex);
 
@@ -1036,11 +1095,13 @@ static int dict_search_bmh( lst_List l,
 
 	 assert (pt >= start && pt < end);
 
-	 if (!previous || compare(previous, dbindex, pt, dbindex->end)) {
+	 if (!previous || compare_1or4 (previous, dbindex, pt, dbindex->end,
+					&previous))
+	 {
 	    ++count;
 	    if (l){
 	       if (!dict_add_word_to_list
-		   (l, database, dbindex, previous = pt))
+		   (l, database, dbindex, pt))
 	       {
 		  return count;
 	       }
@@ -1198,10 +1259,11 @@ static int dict_search_regexpr( lst_List
       ++_dict_comparisons;
 
       if (dict_match (&re, pt, p - pt, 0)) {
-	 if (!previous || compare(previous, dbindex, pt, end)) {
+	 if (!previous || compare_1or4 (previous, dbindex, pt, end, &previous))
+	 {
 	    ++count;
 	    if (!dict_add_word_to_list
-		(l, database, dbindex, previous = pt))
+		(l, database, dbindex, pt))
 	    {
 	       break;
 	    }
@@ -1273,9 +1335,10 @@ static int dict_search_soundex( lst_List
 
       txt_soundex2 (buffer, soundex2);
       if (!strcmp (soundex, soundex2)) {
-	 if (!previous || compare(previous, dbindex, pt, end)) {
+	 if (!previous || compare_1or4 (previous, dbindex, pt, end, &previous))
+	 {
 	    if (!dict_add_word_to_list
-		(l, database, dbindex, previous = pt))
+		(l, database, dbindex, pt))
 	    {
 	       break;
 	    }
