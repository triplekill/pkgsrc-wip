$NetBSD: patch-ag,v 1.1.1.1 2010/12/06 17:01:23 adam Exp $

--- registry/regfio.c.orig	2010-12-05 16:01:50.000000000 +0000
+++ registry/regfio.c
@@ -480,7 +480,7 @@ static REGF_HBIN* read_hbin_block( REGF_
 	/* remember that the record_size is in the 4 bytes preceeding the record itself */
 
 	if ( !prs_set_offset( &hbin->ps, file->data_offset+HBIN_HDR_SIZE-sizeof(uint32) ) )
-		return False;
+		return NULL;
 
 	record_size = 0;
 	header = 0;
@@ -503,12 +503,12 @@ static REGF_HBIN* read_hbin_block( REGF_
 		}
 
 		if ( !prs_set_offset( &hbin->ps, curr_off) )
-			return False;
+			return NULL;
 
 		if ( !prs_uint32( "rec_size", &hbin->ps, 0, &record_size ) )
-			return False;
+			return NULL;
 		if ( !prs_uint32( "header", &hbin->ps, 0, &header ) )
-			return False;
+			return NULL;
 		
 		SMB_ASSERT( record_size != 0 );
 
@@ -532,7 +532,7 @@ static REGF_HBIN* read_hbin_block( REGF_
 	DEBUG(10,("read_hbin_block: free space offset == 0x%x\n", hbin->free_off));
 
 	if ( !prs_set_offset( &hbin->ps, file->data_offset+HBIN_HDR_SIZE )  )
-		return False;
+		return NULL;
 	
 	return hbin;
 }
@@ -1557,7 +1557,7 @@ done:
 	   for the record */
 
 	if ( !prs_uint32("allocated_size", &hbin->ps, 0, &size) )
-		return False;
+		return NULL;
 
 	update_free_space( hbin, size );
 	
@@ -1771,7 +1771,7 @@ static int hashrec_cmp( REGF_HASH_REC *h
 		qsort( parent->subkeys.hashes, parent->subkey_index, sizeof(REGF_HASH_REC), QSORT_CAST hashrec_cmp );
 
 		if ( !hbin_prs_lf_records( "lf_rec", parent->subkeys.hbin, 0, parent ) )
-			return False;
+			return NULL;
 	}
 
 	/* write the security descriptor */
@@ -1923,11 +1923,11 @@ static int hashrec_cmp( REGF_HASH_REC *h
 	
 	prs_set_offset( &nk->hbin->ps, nk->hbin_off );
 	if ( !prs_nk_rec( "nk_rec", &nk->hbin->ps, 0, nk ) )
-		return False;
+		return NULL;
 
 	if ( nk->num_values ) {
 		if ( !hbin_prs_vk_records( "vk_records", vlist_hbin, 0, nk, file ) )
-			return False;
+			return NULL;
 	}
 
 
