TinyXML parses an XML document, and builds from that a Document Object Model
(DOM) that can be read, modified, and saved.

There are different ways to access and interact with XML data. TinyXML uses a
Document Object Model (DOM), meaning the XML data is parsed into a C++ objects
that can be browsed and manipulated, and then written to disk or another output
stream. You can also construct an XML document from scratch with C++ objects
and write this to disk or another output stream.

TinyXML is designed to be easy and fast to learn. It is two headers and four
cpp files. Simply add these to your project and off you go. There is an example
file - xmltest.cpp - to get you started.

TinyXML is released under the ZLib license, so you can use it in open source or
commercial code. The details of the license are at the top of every source
file.

TinyXML attempts to be a flexible parser, but with truly correct and compliant
XML output. TinyXML should compile on any reasonably C++ compliant system. It
does not rely on exceptions or RTTI. It can be compiled with or without STL
support. TinyXML fully supports the UTF-8 encoding, and the first 64k character
entities.

TinyXML doesn't parse or use DTDs (Document Type Definitions) or XSLs
(eXtensible Stylesheet Language.) There are other parsers out there (check out
www.sourceforge.org, search for XML) that are much more fully featured. But
they are also much bigger, take longer to set up in your project, have a higher
learning curve, and often have a more restrictive license. If you are working
with browsers or have more complete XML needs, TinyXML is not the parser for
you.
