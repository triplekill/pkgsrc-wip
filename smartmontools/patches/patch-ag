$NetBSD$

--- smartd.c.orig	2003-11-20 06:08:16.000000000 +0300
+++ smartd.c	2003-12-14 18:55:17.000000000 +0300
@@ -177,7 +177,7 @@
   cfg->name            = FreeNonZero(cfg->name,           -1,__LINE__,__FILE__);
   cfg->address         = FreeNonZero(cfg->address,        -1,__LINE__,__FILE__);
   cfg->emailcmdline    = FreeNonZero(cfg->emailcmdline,   -1,__LINE__,__FILE__);
-  cfg->smartthres      = FreeNonZero(cfg->smartthres,      sizeof(struct ata_smart_thresholds),__LINE__,__FILE__);
+  cfg->smartthres      = FreeNonZero(cfg->smartthres,      sizeof(struct ata_smart_thresholds_pvt),__LINE__,__FILE__);
   cfg->smartval        = FreeNonZero(cfg->smartval,        sizeof(struct ata_smart_values),__LINE__,__FILE__);
   cfg->monitorattflags = FreeNonZero(cfg->monitorattflags, NMONITOR*32,__LINE__,__FILE__);
   cfg->attributedefs   = FreeNonZero(cfg->attributedefs,   MAX_ATTRIBUTE_NUM,__LINE__,__FILE__);
@@ -863,13 +863,13 @@
   // do we need to get SMART data?
   if (retainsmartdata || cfg->autoofflinetest || cfg->selftest || cfg->errorlog) {
     cfg->smartval=(struct ata_smart_values *)calloc(1,sizeof(struct ata_smart_values));
-    cfg->smartthres=(struct ata_smart_thresholds *)calloc(1,sizeof(struct ata_smart_thresholds));
+    cfg->smartthres=(struct ata_smart_thresholds_pvt *)calloc(1,sizeof(struct ata_smart_thresholds_pvt));
     
     if (cfg->smartval)
       bytes+=sizeof(struct ata_smart_values);
     
     if (cfg->smartthres)
-      bytes+=sizeof(struct ata_smart_thresholds);
+      bytes+=sizeof(struct ata_smart_thresholds_pvt);
 
     if (!cfg->smartval || !cfg->smartthres){
       PrintOut(LOG_CRIT,"Not enough memory to obtain SMART data\n");
@@ -951,7 +951,7 @@
     }
     if (cfg->smartthres) {
       cfg->smartthres=CheckFree(cfg->smartthres, __LINE__,__FILE__);
-      bytes-=sizeof(struct ata_smart_thresholds);
+      bytes-=sizeof(struct ata_smart_thresholds_pvt);
     }
   }
 
@@ -1075,7 +1075,7 @@
   cfg->monitorattflags = FreeNonZero(cfg->monitorattflags, NMONITOR*32,__LINE__,__FILE__);
   cfg->attributedefs   = FreeNonZero(cfg->attributedefs,   MAX_ATTRIBUTE_NUM,__LINE__,__FILE__);
   cfg->smartval        = FreeNonZero(cfg->smartval,        sizeof(struct ata_smart_values),__LINE__,__FILE__);
-  cfg->smartthres      = FreeNonZero(cfg->smartthres,      sizeof(struct ata_smart_thresholds),__LINE__,__FILE__);
+  cfg->smartthres      = FreeNonZero(cfg->smartthres,      sizeof(struct ata_smart_thresholds_pvt),__LINE__,__FILE__);
   
   // Check if scsiCheckIE() is going to work
   {
@@ -1138,7 +1138,7 @@
 int  ATACompareValues(changedattribute_t *delta,
                             struct ata_smart_values *new,
                             struct ata_smart_values *old,
-                            struct ata_smart_thresholds *thresholds,
+                            struct ata_smart_thresholds_pvt *thresholds,
                             int n, char *name){
   struct ata_smart_attribute *now,*was;
   struct ata_smart_threshold_entry *thre;
@@ -1315,7 +1315,7 @@
   // Check everything that depends upon SMART Data (eg, Attribute values)
   if (cfg->usagefailed || cfg->prefail || cfg->usage){
     struct ata_smart_values     curval;
-    struct ata_smart_thresholds *thresh=cfg->smartthres;
+    struct ata_smart_thresholds_pvt *thresh=cfg->smartthres;
     
     // Read current attribute values. *drive contains old values and thresholds
     if (ataReadSmartValues(fd,&curval)){
@@ -1994,10 +1994,10 @@
   }
   
   if (add->smartthres) {
-    if (!(add->smartthres=(struct ata_smart_thresholds *)calloc(1,sizeof(struct ata_smart_thresholds))))
+    if (!(add->smartthres=(struct ata_smart_thresholds_pvt *)calloc(1,sizeof(struct ata_smart_thresholds_pvt))))
       goto badexit;
     else
-      bytes+=sizeof(struct ata_smart_thresholds);
+      bytes+=sizeof(struct ata_smart_thresholds_pvt);
   }
 
   return add;
