$NetBSD$

mage.c:7417:7: error: too few arguments to function 'DGifCloseFile'
emacs-current/work/.buildlink/include/gif_lib.h:183:9:
note: declared here

--- ./src/image.c.orig	2014-06-14 13:15:41.000000000 +0900
+++ ./src/image.c	2014-06-15 08:39:42.000000000 +0900
@@ -7409,13 +7409,13 @@
 	}
 #endif
     }
-
+  int * return_value;
   /* Before reading entire contents, check the declared image size. */
   if (!check_image_size (f, gif->SWidth, gif->SHeight))
     {
       image_error ("Invalid image size (see `max-image-size')", Qnil, Qnil);
-      fn_DGifCloseFile (gif);
-      return 0;
+      fn_DGifCloseFile (gif, return_value);
+      return return_value;
     }
 
   /* Read entire contents.  */
@@ -7423,8 +7423,8 @@
   if (rc == GIF_ERROR || gif->ImageCount <= 0)
     {
       image_error ("Error reading `%s'", img->spec, Qnil);
-      fn_DGifCloseFile (gif);
-      return 0;
+      fn_DGifCloseFile (gif, return_value);
+      return return_value;
     }
 
   /* Which sub-image are we to display?  */
@@ -7435,8 +7435,8 @@
       {
 	image_error ("Invalid image number `%s' in image `%s'",
 		     image_number, img->spec);
-	fn_DGifCloseFile (gif);
-	return 0;
+	fn_DGifCloseFile (gif, return_value);
+	return return_value;
       }
   }
 
@@ -7453,8 +7453,8 @@
   if (!check_image_size (f, width, height))
     {
       image_error ("Invalid image size (see `max-image-size')", Qnil, Qnil);
-      fn_DGifCloseFile (gif);
-      return 0;
+      fn_DGifCloseFile (gif, return_value);
+      return return_value;
     }
 
   /* Check that the selected subimages fit.  It's not clear whether
@@ -7471,16 +7471,16 @@
 	     && 0 <= subimg_left && subimg_left <= width - subimg_width))
 	{
 	  image_error ("Subimage does not fit in image", Qnil, Qnil);
-	  fn_DGifCloseFile (gif);
-	  return 0;
+	  fn_DGifCloseFile (gif, return_value);
+	  return return_value;
 	}
     }
 
   /* Create the X image and pixmap.  */
   if (!image_create_x_image_and_pixmap (f, img, width, height, 0, &ximg, 0))
     {
-      fn_DGifCloseFile (gif);
-      return 0;
+      fn_DGifCloseFile (gif, return_value);
+      return return_value;
     }
 
   /* Clear the part of the screen image not covered by the image.
@@ -7650,7 +7650,7 @@
 			    Fcons (make_number (gif->ImageCount),
 				   img->lisp_data));
 
-  fn_DGifCloseFile (gif);
+  fn_DGifCloseFile (gif, return_value);
 
   /* Maybe fill in the background field while we have ximg handy. */
   if (NILP (image_spec_value (img->spec, QCbackground, NULL)))
