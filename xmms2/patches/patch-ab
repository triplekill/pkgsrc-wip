$NetBSD$

--- src/clients/lib/ruby/Library.glib.orig	2005-09-06 19:06:19.000000000 +0000
+++ src/clients/lib/ruby/Library.glib
@@ -5,27 +5,27 @@ source=["rb_xmmsclient_glib.c"]
 static=False
 
 def config(env):
-	if env.tryaction ("ruby --version") :
+	if env.tryaction ("ruby18 --version") :
 		# we require ruby 1.8 or greater
 		print "Checking for Ruby 1.8 or greater... ",
 
-		version = env.run("ruby -e 'puts VERSION'").strip()
+		version = env.run("ruby18 -e 'puts VERSION'").strip()
 		if not version or [int(a) for a in version.split(".")] < [1, 8] :
 			print "no"
 			raise ConfigError("bad")
 
 		print version
 
-		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(Config::CONFIG[\"archdir\"] + \"/ruby.h\")'").strip()
+		got_ruby_h = env.run("ruby18 -rrbconfig -e 'puts File.exist?(Config::CONFIG[\"archdir\"] + \"/ruby.h\")'").strip()
 		if got_ruby_h != "true" :
 			raise ConfigError("bad")
 
-		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(Config::CONFIG[\"archdir\"], 0..1)'"
+		cmd = "ruby18 -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(Config::CONFIG[\"archdir\"], 0..1)'"
 		env.configcmd(cmd)
 		if env.has_key("RUBYARCHDIR"):
 			env.librarypath = env["RUBYARCHDIR"]
 		else:
-			cmd = "ruby -rrbconfig -e 'print Config::CONFIG[\"sitearchdir\"]'"
+			cmd = "ruby18 -rrbconfig -e 'print Config::CONFIG[\"sitearchdir\"]'"
 			env.librarypath = os.popen(cmd).read().strip()
 
 		env.pkgconfig("glib-2.0")
