$NetBSD$

--- src/bsd/hpi/green_threads/src/iomgr.c.orig	Wed Jul  2 22:24:00 2003
+++ src/bsd/hpi/green_threads/src/iomgr.c
@@ -2052,9 +2052,17 @@ pipe(int fds[])
 
     if (threadBootstrappedP == FALSE) {
 	if (!wrappersInited) initializeWrappers();
+#ifdef __NetBSD__
+	sys_ret = socketpair(AF_LOCAL, SOCK_STREAM, 0, fds);
+#else
 	sys_ret = (*systable[SYS_PIPE].addr)(fds);
+#endif
 	if (sys_ret != -1) {
 	    int ret;
+#ifdef __NetBSD__
+	    shutdown(fds[0], SHUT_WR);
+	    shutdown(fds[1], SHUT_RD);
+#endif
 	    Log2(1, "Opened pipe fd0: %d fd1: %d\n", fds[0], fds[1]);
 	    ret = initialize_monitors(fds[0]);
 	    ret = (ret == B_FALSE ? ret : initialize_monitors(fds[1]));
@@ -2080,7 +2088,11 @@ pipe(int fds[])
 	 * %o0 and %o1, effectively returning a "long long", but the
 	 * prototype for syscall only returns an int!
 	 */
+#ifdef __NetBSD__
+	sys_ret = socketpair(AF_LOCAL, SOCK_STREAM, 0, fds);
+#else
 	sys_ret = (*systable[SYS_PIPE].addr)(fds);
+#endif
 	if ((sys_ret != -1) ||
 	    ((errno != EAGAIN) && (errno != EINTR))) {
 	    break;      
@@ -2089,6 +2101,10 @@ pipe(int fds[])
  
     if (sys_ret != -1) {
 	int ret;
+#ifdef __NetBSD__
+	shutdown(fds[0], SHUT_WR);
+	shutdown(fds[1], SHUT_RD);
+#endif
 	Log2(1, "Opened pipe fd0: %d fd1: %d\n", fds[0], fds[1]);
 	ret = initialize_monitors(fds[0]);
 	ret = (ret == B_FALSE ? ret : initialize_monitors(fds[1]));
