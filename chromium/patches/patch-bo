$NetBSD$

--- base/debug_util_posix.cc.orig	2010-09-13 15:18:37.000000000 +0000
+++ base/debug_util_posix.cc
@@ -27,7 +27,9 @@
 #include <iostream>
 
 #include "base/basictypes.h"
+#if !defined(OS_NETBSD)
 #include "base/compat_execinfo.h"
+#endif
 #include "base/eintr_wrapper.h"
 #include "base/logging.h"
 #include "base/safe_strerror_posix.h"
@@ -188,7 +190,7 @@ bool DebugUtil::BeingDebugged() {
   return being_debugged;
 }
 
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_NETBSD)
 
 // We can look in /proc/self/status for TracerPid.  We are likely used in crash
 // handling, so we are careful not to use the heap or have side effects.
@@ -228,8 +230,8 @@ bool DebugUtil::BeingDebugged() {
 
 bool DebugUtil::BeingDebugged() {
   // TODO(benl): can we determine this under FreeBSD?
-  NOTIMPLEMENTED();
-  return false;
+  LOG(WARNING) << "Don't know how to do this";
+  return true;
 }
 
 #endif  // defined(OS_FREEBSD)
@@ -270,7 +272,12 @@ StackTrace::StackTrace() {
 #endif
   // Though the backtrace API man page does not list any possible negative
   // return values, we take no chance.
+#if !defined(OS_NETBSD)
   count_ = std::max(backtrace(trace_, arraysize(trace_)), 0);
+#else
+  count_ = 0;
+  return;
+#endif
 }
 
 void StackTrace::PrintBacktrace() {
