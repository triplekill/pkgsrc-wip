$NetBSD$

--- client/Thread.h.orig	2005-12-09 14:44:43.000000000 +0100
+++ client/Thread.h
@@ -96,24 +96,16 @@ public:
 	static void sleep(u_int32_t millis) { ::usleep(millis*1000); };
 	static void yield() { ::sched_yield(); };
 	static long safeInc(volatile long& v) { 
-#ifdef HAVE_ASM_ATOMIC_H
-		atomic_t t = ATOMIC_INIT(v);
-		atomic_inc(&t);
-		return (v=t.counter);
-#else
-#warning FIXME
-		return ++v;
-#endif
+		pthread_mutex_lock(&safeinc_mutex);
+		long r=++v;
+		pthread_mutex_unlock(&safeinc_mutex);
+		return r;
 	};
 	static long safeDec(volatile long& v) { 
-#ifdef HAVE_ASM_ATOMIC_H
-		atomic_t t = ATOMIC_INIT(v);
-		atomic_dec(&t);
-		return (v=t.counter);
-#else
-#warning FIXME
-		return --v;
-#endif
+		pthread_mutex_lock(&safeinc_mutex);
+		long r=--v;
+		pthread_mutex_unlock(&safeinc_mutex);
+		return r;
 	};
 #endif
 
@@ -133,6 +125,7 @@ private:
 		return 0;
 	}
 #else
+	static pthread_mutex_t safeinc_mutex;
 	pthread_t threadHandle;
 	static void* starter(void* p) {
 		Thread* t = (Thread*)p;
