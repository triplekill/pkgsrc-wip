$NetBSD$

--- upnp/src/genlib/net/uri/uri.c.orig	2006-06-06 14:58:41.000000000 +0900
+++ upnp/src/genlib/net/uri/uri.c
@@ -35,6 +35,7 @@
 
 #include "config.h"
 #include "uri.h"
+#include <pthread.h>
 
 /************************************************************************
 *	Function :	is_reserved
@@ -601,16 +602,36 @@ parse_hostport( char *in,
         int errCode = 0;
 
         //call gethostbyname_r (reentrant form of gethostbyname)
-        #ifndef SPARC_SOLARIS
+        #if defined(__GLIBC__) || defined(__FreeBSD__)
         errCode = gethostbyname_r( temp_host_name,
                                    &h_buf,
                                    temp_hostbyname_buff,
                                    BUFFER_SIZE, &h, &errcode );
-        #else
+        h = &h_buf;
+        #elif defined(__osf1__)
+        h = gethostbyname( temp_host_name );
+        errCode = h == NULL ? -1 : 0;
+        #elif defined(__hpux) || defined(_AIX)
+        errCode = gethostbyname_r( temp_host_name,
+                                   &h_buf,
+                                   (struct hostent_data*)temp_hostbyname_buff);
+        h = &h_buf;
+        #elif defined(sun)
         errCode = gethostbyname_r( temp_host_name,
                                    &h,
                                    temp_hostbyname_buff,
                                    BUFFER_SIZE, &errcode );
+	#else
+        struct hostent *h2;
+        static pthread_mutex_t hostname_mutex = PTHREAD_MUTEX_INITIALIZER;
+        pthread_mutex_lock( &hostname_mutex );
+        if (( h2 = gethostbyname( temp_host_name)) == NULL) {
+                errCode = -1;
+        } else {
+                memcpy(&h_buf, h2, sizeof(struct hostent));
+                h = &h_buf;
+        }
+        pthread_mutex_unlock(&hostname_mutex);
         #endif
 
         if( errCode == 0 ) {
