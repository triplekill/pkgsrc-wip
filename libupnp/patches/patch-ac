$NetBSD$

--- upnp/src/genlib/net/uri/uri.c.orig	2006-07-17 15:37:22.000000000 +0900
+++ upnp/src/genlib/net/uri/uri.c
@@ -38,6 +38,7 @@
 #endif
 #include "config.h"
 #include "uri.h"
+#include <pthread.h>
 
 #ifdef WIN32
  #include "inet_pton.h"
@@ -613,7 +614,7 @@ parse_hostport( char *in,
         //call gethostbyname_r (reentrant form of gethostbyname)
 #if defined(WIN32)
         h=gethostbyname(temp_host_name);
-#elif defined(SPARC_SOLARIS)
+#elif defined(sun)
         errCode = gethostbyname_r( temp_host_name,
                                    &h,
                                    temp_hostbyname_buff,
@@ -626,11 +627,30 @@ parse_hostport( char *in,
         if ( h == NULL ) {
             errCode = 1;
         }
-#else
+#elif defined(linux)
         errCode = gethostbyname_r( temp_host_name,
                                    &h_buf,
                                    temp_hostbyname_buff,
                                    BUFFER_SIZE, &h, &errcode );
+#elif defined(__osf1__)
+        h = gethostbyname( temp_host_name );
+	errCode = h = NULL ? -1 : 0;
+#elif defined(__hpux) || defined(_AIX)
+        errCode = gethostbyname_r( temp_host_name,
+                                   &h_buf,
+                                   (struct hostent_data*)temp_hostbyname_buff);
+        h = &h_buf;
+#else
+        struct hostent *h2;
+        static pthread_mutex_t hostname_mutex = PTHREAD_MUTEX_INITIALIZER;
+        pthread_mutex_lock( &hostname_mutex );
+        if (( h2 = gethostbyname( temp_host_name)) == NULL) {
+             errCode = -1;
+        } else {
+             memcpy(&h_buf, h2, sizeof(struct hostent));
+             h = &h_buf;
+        }
+        pthread_mutex_unlock(&hostname_mutex);
 #endif 
 
         if( errCode == 0 ) {
