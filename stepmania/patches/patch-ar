$NetBSD$

--- src/arch/Threads/Threads.h.orig	2004-09-07 07:05:56.000000000 +0400
+++ src/arch/Threads/Threads.h	2005-05-15 18:36:07.000000000 +0400
@@ -15,7 +15,7 @@
 	/* Get the identifier for this thread.  The actual meaning of this is implementation-
 	 * defined, except that each thread has exactly one ID and each ID corresponds to
 	 * one thread.  (This means that Win32 thread handles are not acceptable as ThreadIds.) */
-	virtual uint64_t GetThreadId() const = 0;
+	virtual PTHREAD_T GetThreadId() const = 0;
 
 	virtual int Wait() = 0;
 };
@@ -53,15 +53,15 @@
 };
 
 /* These functions must be implemented by the thread implementation. */
-ThreadImpl *MakeThread( int (*fn)(void *), void *data, uint64_t *piThreadID );
+ThreadImpl *MakeThread( int (*fn)(void *), void *data, PTHREAD_T *piThreadID );
 ThreadImpl *MakeThisThread();
 MutexImpl *MakeMutex( RageMutex *pParent );
 SemaImpl *MakeSemaphore( int iInitialValue );
-uint64_t GetThisThreadId();
+PTHREAD_T GetThisThreadId();
 
 /* Since ThreadId is implementation-defined, we can't define a universal invalid
  * value.  Return the invalid value for this implementation. */
-uint64_t GetInvalidThreadId();
+PTHREAD_T GetInvalidThreadId();
 
 #endif
 
