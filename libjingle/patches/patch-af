$NetBSD$

--- latebindingsymboltable.cc.orig	2011-12-29 16:56:17.000000000 +0100
+++ latebindingsymboltable.cc	2011-12-29 16:57:00.000000000 +0100
@@ -27,7 +27,7 @@
 
 #include "talk/base/latebindingsymboltable.h"
 
-#ifdef LINUX
+#if defined(LINUX) || defined(__NetBSD__)
 #include <dlfcn.h>
 #endif
 
@@ -36,7 +36,7 @@
 namespace talk_base {
 
 inline static const char *GetDllError() {
-#ifdef LINUX
+#if defined(LINUX) || defined(__NetBSD__)
   char *err = dlerror();
   if (err) {
     return err;
@@ -49,7 +49,7 @@
 }
 
 DllHandle InternalLoadDll(const char dll_name[]) {
-#ifdef LINUX
+#if defined(LINUX) || defined(__NetBSD__)
   DllHandle handle = dlopen(dll_name, RTLD_NOW);
 #else
 #error Not implemented
@@ -61,7 +61,7 @@
 }
 
 void InternalUnloadDll(DllHandle handle) {
-#ifdef LINUX
+#if defined(LINUX) || defined(__NetBSD__)
   if (dlclose(handle) != 0) {
     LOG(LS_ERROR) << GetDllError();
   }
@@ -73,7 +73,7 @@
 static bool LoadSymbol(DllHandle handle,
                        const char *symbol_name,
                        void **symbol) {
-#ifdef LINUX
+#if defined(LINUX) || defined(__NetBSD__)
   *symbol = dlsym(handle, symbol_name);
   char *err = dlerror();
   if (err) {
@@ -96,7 +96,7 @@
                          int num_symbols,
                          const char *const symbol_names[],
                          void *symbols[]) {
-#ifdef LINUX
+#if defined(LINUX) || defined(__NetBSD__)
   // Clear any old errors.
   dlerror();
 #endif
