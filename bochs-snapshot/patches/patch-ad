$NetBSD$

--- Makefile.in.orig	2010-02-26 14:18:18.000000000 +0000
+++ Makefile.in
@@ -66,8 +66,8 @@ RMDIR=rmdir
 TAR=tar
 CHMOD=chmod
 # the GZIP variable is reserved by gzip program
-GZIP_BIN=gzip -9
-GUNZIP=gunzip
+GZIP_BIN=${GZIP_CMD} -9
+GUNZIP=${GUNZIP_CMD}
 ZIP=zip
 UNIX2DOS=unix2dos
 LIBTOOL=@LIBTOOL@
@@ -561,7 +561,7 @@ RINCLUDES=/System/Library/Frameworks/Car
 REZ_ARGS=-append -i $RINCLUDES -d SystemSevenOrLater=1 -useDF
 STANDALONE_LIBDIR=`pwd`/$(APP)/Contents/$(APP_PLATFORM)/lib
 OSACOMPILE=/usr/bin/osacompile
-SETFILE=/Developer/Tools/Setfile
+SETFILE=/Developer/Tools/SetFile
 
 # On a MacOS X machine, you run rez, osacompile, and setfile to
 # produce the script executable, which has both a data fork and a
@@ -644,12 +644,9 @@ install_macosx: all download_dlx install
 	$(CPMAC) $(srcdir)/.bochsrc $(DESTDIR)$(sharedir)/bochsrc-sample.txt
 	-mkdir $(DESTDIR)$(sharedir)/keymaps
 	$(CPMAC) $(srcdir)/gui/keymaps/*.map $(DESTDIR)$(sharedir)/keymaps
-	cat $(DLXLINUX_TAR) | (cd $(DESTDIR)$(sharedir) && tar xzvf -)
-	dlxrc=$(DESTDIR)$(sharedir)/dlxlinux/bochsrc.txt; mv "$$dlxrc" "$$dlxrc.orig" && sed < "$$dlxrc.orig" 's/\/usr\/local\/bochs\/latest/../' > "$$dlxrc" && rm -f "$$dlxrc.orig"
 	mv $(srcdir)/README $(srcdir)/README.orig
 	cat $(srcdir)/build/macosx/README.macosx-binary $(srcdir)/README.orig > $(DESTDIR)$(sharedir)/README
 	rm -f $(DESTDIR)$(sharedir)/README.orig
-	$(CPMAC) $(SCRIPT_EXEC) $(DESTDIR)$(sharedir)/dlxlinux
 #	for i in $(TEXT_FILE_LIST); do mv $(srcdir)/$$i $(DESTDIR)$(sharedir)/$$i.txt; done
 
 ###########################################
