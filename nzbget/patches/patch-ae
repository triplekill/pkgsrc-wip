$NetBSD$

--- NCursesFrontend.cpp.orig	2005-09-02 09:00:41.000000000 +0200
+++ NCursesFrontend.cpp
@@ -23,11 +23,12 @@
  */
 
 #include <stdlib.h>
+#include <math.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <stdarg.h>
 #include <signal.h>
-
+#include "config.h"
 #include "NCursesFrontend.h"
 
 #include "NZBQueueCoordinator.h"
@@ -201,7 +202,7 @@ void NCursesFrontend::PrintStatus()
 
 	if(fCurrentDownloadSpeed > 0.0)
 	{
-		long long remain_sec = m_lQueueSize / (fCurrentDownloadSpeed * 1024);
+		float remain_sec = m_lQueueSize / (fCurrentDownloadSpeed * 1024.0);
 		int h = 0;
 		int m = 0;
 		int s = 0;
@@ -217,7 +218,7 @@ void NCursesFrontend::PrintStatus()
 			remain_sec -= 60;
 		}
 
-		s = remain_sec;
+		s = (int)ceil(remain_sec);
 
 		sprintf(timeString, "~ %.2d:%.2d:%.2d", h, m, s);
 	}
@@ -449,7 +450,17 @@ void NCursesFrontend::PrintQueue()
 			const char* szPause = pQueue->GetPause() ? "(paused)" : "";
 			const char* szCanceled = pQueue->GetCancelDownload() ? "(canceled)" : "";
 
-			sprintf( szBuffer, "%s (%i/%i) %s%s", basename( pQueue->GetFileName() )
+			const char *QueueBase = strrchr(pQueue->GetFileName(), '/');
+			if (!QueueBase)
+			{
+			  QueueBase = pQueue->GetFileName();
+			}
+			else
+			{
+			  QueueBase++;
+			}
+
+			sprintf( szBuffer, "%s (%i/%i) %s%s", QueueBase
 								, pQueue->GetNumberOfJobs()
 								, pQueue->GetOriginalNumberOfJobs()
 								, szPause
@@ -500,7 +511,9 @@ void NCursesFrontend::UpdateInput()
 		{
 			// Key 'q' for quit
 			case 'q':
-				kill( GlobalControl::GetInstance()->GetProgramPID(), SIGINT );  // send a kill signal
+				//kill( GlobalControl::GetInstance()->GetProgramPID(), SIGINT );  // send a kill signal
+				endwin(); // restore terminal settings
+				exit(1); // don't be so harsh!
 				break;
 			// Key 'p' for pause
 			case 'p':
