$NetBSD$

--- src/intercept-sysctl.c.orig	2006-05-05 23:29:23.000000000 +0200
+++ src/intercept-sysctl.c
@@ -35,10 +35,17 @@
 #include <sys/sem.h>
 #include <sys/tty.h>
 #include <sys/socket.h>
-#include <ddb/db_var.h>
 #include <uvm/uvm_param.h>
-#include <uvm/uvm_swap_encrypt.h>
+#ifdef __NetBSD__
+#include <systrace.h>
+#else
 #include <dev/systrace.h>
+#endif
+
+#ifndef __NetBSD__
+#include <ddb/db_var.h>
+#include <uvm/uvm_swap_encrypt.h>
+#endif
 
 #include <assert.h>
 #include <errno.h>
@@ -406,6 +413,8 @@ inter_sysctl(int fd, struct str_message 
 	/* Write our report to log. */
 	fmt_report(r, MAX_REPORTLEN, name, namel);
 	rep_inter(msg->msg_pid, r);
+
+#ifndef __NetBSD__
 	CHK_CTL(CTL_DDB, DBCTL_CONSOLE, 0);
 	CHK_CTL(CTL_DDB, DBCTL_LOG, 0);
 	CHK_CTL(CTL_DDB, DBCTL_MAXLINE, 0);
@@ -415,20 +424,23 @@ inter_sysctl(int fd, struct str_message 
 	CHK_CTL(CTL_FS, FS_POSIX_SETUID, 0);
 	CHK_CTL(CTL_HW, HW_SETPERF, 0);
 	CHK_CTL(CTL_KERN, KERN_CRYPTODEVALLOWSOFT, 0);
-	CHK_CTL(CTL_KERN, KERN_DOMAINNAME, 0);
 	CHK_CTL(CTL_KERN, KERN_EMUL, KERN_EMUL_ENABLED, 0);
+	CHK_CTL(CTL_KERN, KERN_MAXCLUSTERS, 0);
+#endif
+
+	CHK_CTL(CTL_KERN, KERN_DOMAINNAME, 0);
 	CHK_CTL(CTL_KERN, KERN_HOSTID, 0);
 	CHK_CTL(CTL_KERN, KERN_HOSTNAME, 0);
-	CHK_CTL(CTL_KERN, KERN_MAXCLUSTERS, 0);
 	CHK_CTL(CTL_KERN, KERN_MAXFILES, 0);
 	CHK_CTL(CTL_KERN, KERN_MAXPROC, 0);
 	CHK_CTL(CTL_KERN, KERN_MAXVNODES, 0);
-	CHK_CTL(CTL_KERN, KERN_NOSUIDCOREDUMP, 0);
 	CHK_CTL(CTL_KERN, KERN_PROF, GPROF_COUNT, 0);
 	CHK_CTL(CTL_KERN, KERN_PROF, GPROF_FROMS, 0);
 	CHK_CTL(CTL_KERN, KERN_PROF, GPROF_STATE, 0);
 	CHK_CTL(CTL_KERN, KERN_PROF, GPROF_TOS, 0);
 	CHK_CTL(CTL_KERN, KERN_SECURELVL, 0); 
+
+#ifndef __NetBSD__
 	CHK_CTL(CTL_KERN, KERN_SEMINFO, KERN_SEMINFO_SEMMNI, 0);
 	CHK_CTL(CTL_KERN, KERN_SEMINFO, KERN_SEMINFO_SEMMNS, 0);
 	CHK_CTL(CTL_KERN, KERN_SEMINFO, KERN_SEMINFO_SEMMNU, 0);
@@ -448,6 +460,7 @@ inter_sysctl(int fd, struct str_message 
 	CHK_CTL(CTL_KERN, KERN_WATCHDOG, KERN_WATCHDOG_PERIOD, 0);
 	CHK_CTL(CTL_KERN, KERN_WATCHDOG, KERN_WATCHDOG_PERIOD, 0);
 	CHK_CTL(CTL_KERN, KERN_WATCHDOG, KERN_WATCHDOG_PERIOD, 0);
+#endif
 	/*
 	 * FIXME: this is a broad stop-all for INET and INET6 changeable
 	 * sequences.  Is this the correct behaviour?
@@ -456,9 +469,11 @@ inter_sysctl(int fd, struct str_message 
 	CHK_CTL(CTL_NET, PF_INET6, 0);
 	CHK_CTL(CTL_NET, PF_KEY, 0);
 	CHK_CTL(CTL_VM, VM_ANONMIN, 0);
+#ifndef __NetBSD__
 	CHK_CTL(CTL_VM, VM_SWAPENCRYPT, SWPENC_ENABLE, 0);
 	CHK_CTL(CTL_VM, VM_VNODEMIN, 0);
 	CHK_CTL(CTL_VM, VM_VTEXTMIN, 0);
+#endif
 	/*
 	 * Special interception for CTL_KERN/KERN_HOSTNAME, which must
 	 * return our preprogrammed name.
