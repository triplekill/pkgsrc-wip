$NetBSD$

# place the configuration into the file where the build system expects it

--- configure.orig	2010-01-15 12:13:34.000000000 +0000
+++ configure
@@ -194,45 +194,47 @@ if [ "$base" != "$build" ] ; then
 	cp $base/Makefile $build
 fi
 
-# create config.make
-echo '# config.make generated by configure script' >$build/config.make
-echo "POCO_CONFIG = $config" >>$build/config.make
-echo "POCO_BASE = $base" >>$build/config.make
-echo "POCO_BUILD = $build" >>$build/config.make
-echo "POCO_PREFIX = $prefix" >>$build/config.make
-echo "POCO_FLAGS = $flags" >>$build/config.make
-echo "OMIT = $omit" >>$build/config.make
+# create config.build
+echo '# config.build generated by configure script' >$build/config.build
+echo "POCO_CONFIG = $config" >>$build/config.build
+echo "POCO_BASE = $base" >>$build/config.build
+echo "POCO_BUILD = $build" >>$build/config.build
+echo "POCO_PREFIX = $prefix" >>$build/config.build
+echo "POCO_FLAGS = $flags" >>$build/config.build
+echo "OMIT = $omit" >>$build/config.build
 if [ "$stdcxx_base" != "" ] ; then
-	echo "STDCXX_BASE = $stdcxx_base" >>$build/config.make
+	echo "STDCXX_BASE = $stdcxx_base" >>$build/config.build
 fi
 if [ "$includepath" != "" ] ; then
-	echo "POCO_ADD_INCLUDE = $includepath" >>$build/config.make
+	echo "POCO_ADD_INCLUDE = $includepath" >>$build/config.build
 fi
 if [ "$librarypath" != "" ] ; then
-	echo "POCO_ADD_LIBRARY = $librarypath" >>$build/config.make
+	echo "POCO_ADD_LIBRARY = $librarypath" >>$build/config.build
 fi
 if [ "$unbundled" != "" ] ; then
-	echo "POCO_UNBUNDLED = 1" >>$build/config.make
+	echo "POCO_UNBUNDLED = 1" >>$build/config.build
 fi
-echo "export POCO_CONFIG" >>$build/config.make
-echo "export POCO_BASE" >>$build/config.make
-echo "export POCO_BUILD" >>$build/config.make
-echo "export POCO_PREFIX" >>$build/config.make
-echo "export POCO_FLAGS" >>$build/config.make
+echo "export POCO_CONFIG" >>$build/config.build
+echo "export POCO_BASE" >>$build/config.build
+echo "export POCO_BUILD" >>$build/config.build
+echo "export POCO_PREFIX" >>$build/config.build
+echo "export POCO_FLAGS" >>$build/config.build
 if [ "$stdcxx_base" != "" ] ; then
-	echo "export STDCXX_BASE" >>$build/config.make
+	echo "export STDCXX_BASE" >>$build/config.build
 fi
 if [ "$includepath" != "" ] ; then
-	echo "export POCO_ADD_INCLUDE" >>$build/config.make
+	echo "export POCO_ADD_INCLUDE" >>$build/config.build
 fi
 if [ "$librarypath" != "" ] ; then
-	echo "export POCO_ADD_LIBRARY" >>$build/config.make
+	echo "export POCO_ADD_LIBRARY" >>$build/config.build
 fi
 if [ "$unbundled" != "" ] ; then
-	echo "export POCO_UNBUNDLED " >>$build/config.make
+	echo "export POCO_UNBUNDLED " >>$build/config.build
 fi
 
-echo ".PHONY: poco" >>$build/config.make
+echo '# config.make generated by configure script' > $build/config.make
+echo 'sinclude config.build' >> $build/config.make
+echo '.PHONY: poco' >>$build/config.make
 echo "poco: libexecs $tests $samples" >>$build/config.make
 
 echo "Configured for $config"
