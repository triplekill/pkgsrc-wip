$NetBSD: patch-configure,v 1.4 2013/11/30 12:34:52 wiz Exp $

- always use atomic_ops(3) on NetBSD, even on arm
- kill test(1) bash'ism

--- configure.orig	2012-07-19 11:30:11.000000000 +0000
+++ configure
@@ -7995,6 +7995,11 @@ else
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking architecture for native atomic operations" >&5
 $as_echo_n "checking architecture for native atomic operations... " >&6; }
     case $host in
+        *-netbsd*)
+            { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+            need_libatomic_ops=no
+        ;;
         arm*)
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: arm" >&5
 $as_echo "arm" >&6; }
@@ -8062,11 +8067,6 @@ $as_echo "#define ATOMIC_ARM_INLINE_ASM 
 fi
             fi
         ;;
-        *-netbsdelf5*)
-            { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-            need_libatomic_ops=no
-        ;;
         *-freebsd*)
             { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
@@ -19748,7 +19748,7 @@ _ACEOF
 
 fi
 
-if test "$ac_cv_tls" == "__thread"; then :
+if test "$ac_cv_tls" = "__thread"; then :
 
 $as_echo "#define SUPPORT_TLS___THREAD 1" >>confdefs.h
 
@@ -20146,7 +20146,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 fi
 
-if test "x$ax_pthread_ok" == "xyes"; then :
+if test "x$ax_pthread_ok" = "xyes"; then :
 
 $as_echo "#define _POSIX_PTHREAD_SEMANTICS 1" >>confdefs.h
 
@@ -23063,12 +23063,12 @@ if test -n "$LIBJSON_CFLAGS"; then
     pkg_cv_LIBJSON_CFLAGS="$LIBJSON_CFLAGS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \" json >= 0.9 \""; } >&5
-  ($PKG_CONFIG --exists --print-errors " json >= 0.9 ") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \" json-c >= 0.9 \""; } >&5
+  ($PKG_CONFIG --exists --print-errors " json-c >= 0.9 ") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBJSON_CFLAGS=`$PKG_CONFIG --cflags " json >= 0.9 " 2>/dev/null`
+  pkg_cv_LIBJSON_CFLAGS=`$PKG_CONFIG --cflags " json-c >= 0.9 " 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -23080,12 +23080,12 @@ if test -n "$LIBJSON_LIBS"; then
     pkg_cv_LIBJSON_LIBS="$LIBJSON_LIBS"
  elif test -n "$PKG_CONFIG"; then
     if test -n "$PKG_CONFIG" && \
-    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \" json >= 0.9 \""; } >&5
-  ($PKG_CONFIG --exists --print-errors " json >= 0.9 ") 2>&5
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: \$PKG_CONFIG --exists --print-errors \" json-c >= 0.9 \""; } >&5
+  ($PKG_CONFIG --exists --print-errors " json-c >= 0.9 ") 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-  pkg_cv_LIBJSON_LIBS=`$PKG_CONFIG --libs " json >= 0.9 " 2>/dev/null`
+  pkg_cv_LIBJSON_LIBS=`$PKG_CONFIG --libs " json-c >= 0.9 " 2>/dev/null`
 		      test "x$?" != "x0" && pkg_failed=yes
 else
   pkg_failed=yes
@@ -23106,14 +23106,14 @@ else
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        LIBJSON_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs " json >= 0.9 " 2>&1`
+	        LIBJSON_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs " json-c >= 0.9 " 2>&1`
         else
-	        LIBJSON_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs " json >= 0.9 " 2>&1`
+	        LIBJSON_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs " json-c >= 0.9 " 2>&1`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$LIBJSON_PKG_ERRORS" >&5
 
-	as_fn_error $? "Package requirements ( json >= 0.9 ) were not met:
+	as_fn_error $? "Package requirements ( json-c >= 0.9 ) were not met:
 
 $LIBJSON_PKG_ERRORS
 
