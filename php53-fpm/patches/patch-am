$NetBSD: patch-am,v 1.1 2010/11/25 03:43:50 taca Exp $

GC bug fix: http://svn.php.net/viewvc?view=revision&revision=303016

--- Zend/zend_gc.c.orig	2010-04-01 22:54:03.000000000 +0000
+++ Zend/zend_gc.c
@@ -414,19 +414,21 @@ static void gc_mark_roots(TSRMLS_D)
 	gc_root_buffer *current = GC_G(roots).next;
 
 	while (current != &GC_G(roots)) {
-		if (current->handle && EG(objects_store).object_buckets) {
-			struct _store_object *obj = &EG(objects_store).object_buckets[current->handle].bucket.obj;
+		if (current->handle) {
+			if (EG(objects_store).object_buckets) {
+				struct _store_object *obj = &EG(objects_store).object_buckets[current->handle].bucket.obj;
 
-			if (GC_GET_COLOR(obj->buffered) == GC_PURPLE) {
-				zval z;
+				if (GC_GET_COLOR(obj->buffered) == GC_PURPLE) {
+					zval z;
 
-				INIT_PZVAL(&z);
-				Z_OBJ_HANDLE(z) = current->handle;
-				Z_OBJ_HT(z) = current->u.handlers;
-				zobj_mark_grey(obj, &z TSRMLS_CC);
-			} else {
-				GC_SET_ADDRESS(obj->buffered, NULL);
-				GC_REMOVE_FROM_BUFFER(current);
+					INIT_PZVAL(&z);
+					Z_OBJ_HANDLE(z) = current->handle;
+					Z_OBJ_HT(z) = current->u.handlers;
+					zobj_mark_grey(obj, &z TSRMLS_CC);
+				} else {
+					GC_SET_ADDRESS(obj->buffered, NULL);
+					GC_REMOVE_FROM_BUFFER(current);
+				}
 			}
 		} else {
 			if (GC_ZVAL_GET_COLOR(current->u.pz) == GC_PURPLE) {
@@ -623,15 +625,17 @@ static void gc_collect_roots(TSRMLS_D)
 	gc_root_buffer *current = GC_G(roots).next;
 
 	while (current != &GC_G(roots)) {
-		if (current->handle && EG(objects_store).object_buckets) {
-			struct _store_object *obj = &EG(objects_store).object_buckets[current->handle].bucket.obj;
-			zval z;
+		if (current->handle) {
+			if (EG(objects_store).object_buckets) {
+				struct _store_object *obj = &EG(objects_store).object_buckets[current->handle].bucket.obj;
+				zval z;
 
-			GC_SET_ADDRESS(obj->buffered, NULL);
-			INIT_PZVAL(&z);
-			Z_OBJ_HANDLE(z) = current->handle;
-			Z_OBJ_HT(z) = current->u.handlers;
-			zobj_collect_white(&z TSRMLS_CC);
+				GC_SET_ADDRESS(obj->buffered, NULL);
+				INIT_PZVAL(&z);
+				Z_OBJ_HANDLE(z) = current->handle;
+				Z_OBJ_HT(z) = current->u.handlers;
+				zobj_collect_white(&z TSRMLS_CC);
+			}
 		} else {
 			GC_ZVAL_SET_ADDRESS(current->u.pz, NULL);
 			zval_collect_white(current->u.pz TSRMLS_CC);
