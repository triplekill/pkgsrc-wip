$NetBSD$

--- liblitz/draw_cairo.c.orig	2005-07-30 22:14:00.000000000 +0000
+++ liblitz/draw_cairo.c
@@ -14,8 +14,7 @@ static void
 draw_bg(Display * dpy, cairo_t * cr, Draw * d)
 {
     /* draw bg */
-    cairo_set_rgb_color(cr, d->bg.r, d->bg.g, d->bg.b);
-    cairo_set_alpha(cr, 1.0);
+    cairo_set_source_rgba(cr, d->bg.r, d->bg.g, d->bg.b, 1.0);
     if(!d->notch) {
         cairo_rectangle(cr, d->rect.x, d->rect.y, d->rect.width,
                         d->rect.height);
@@ -48,27 +47,26 @@ _draw_border(cairo_t * cr, Draw * d)
     cairo_set_line_join(cr, CAIRO_LINE_JOIN_MITER);
     /* default */
     /* NW->SW */
-    cairo_set_alpha(cr, 1.0);
-    cairo_set_rgb_color(cr, d->border[3].r, d->border[3].g,
-                        d->border[3].b);
+    cairo_set_source_rgba(cr, d->border[3].r, d->border[3].g,
+                          d->border[3].b, 1.0);
     cairo_move_to(cr, d->rect.x, d->rect.y);
     cairo_rel_line_to(cr, 0, d->rect.height);
     cairo_stroke(cr);
     /* NW->NE */
-    cairo_set_rgb_color(cr, d->border[0].r, d->border[0].g,
-                        d->border[0].b);
+    cairo_set_source_rgba(cr, d->border[0].r, d->border[0].g,
+                          d->border[0].b, 1.0);
     cairo_move_to(cr, d->rect.x, d->rect.y);
     cairo_rel_line_to(cr, d->rect.width, 0);
     cairo_stroke(cr);
     /* SW->SE */
-    cairo_set_rgb_color(cr, d->border[2].r, d->border[2].g,
-                        d->border[2].b);
+    cairo_set_source_rgba(cr, d->border[2].r, d->border[2].g,
+                          d->border[2].b, 1.0);
     cairo_move_to(cr, d->rect.x, d->rect.y + d->rect.height);
     cairo_rel_line_to(cr, d->rect.width, 0);
     cairo_stroke(cr);
     /* SE->NE */
-    cairo_set_rgb_color(cr, d->border[1].r, d->border[1].g,
-                        d->border[1].b);
+    cairo_set_source_rgba(cr, d->border[1].r, d->border[1].g,
+                          d->border[1].b, 1.0);
     cairo_move_to(cr, d->rect.x + d->rect.width, d->rect.y);
     cairo_rel_line_to(cr, 0, d->rect.height);
     cairo_stroke(cr);
@@ -90,25 +88,23 @@ draw_text(Display * dpy, cairo_t * cr, D
     len = strlen(text);
 
     /* query font */
-    cairo_select_font(cr, d->fnt.font, CAIRO_FONT_SLANT_NORMAL,
-                      CAIRO_FONT_WEIGHT_NORMAL);
-    cairo_scale_font(cr, d->fnt.scale);
+    cairo_select_font_face(cr, d->fnt.font, CAIRO_FONT_SLANT_NORMAL,
+                           CAIRO_FONT_WEIGHT_NORMAL);
+    cairo_set_font_size(cr, d->fnt.scale);
 
     /* query text extends */
-    cairo_current_font_extents(cr, &fext);
-    cairo_text_extents(cr, (unsigned char *) text, &textext);
+    cairo_font_extents(cr, &fext);
+    cairo_text_extents(cr, text, &textext);
 
     /* calculate y offset, should be baseline */
-    offy = d->rect.y + d->rect.height / 2
-        + ((d->rect.height - 2) - (fext.ascent + fext.descent)) / 2;
+    offy = d->rect.y + ((d->rect.height - 2) / 2) + ((fext.ascent + fext.descent) / 2);
     /* check if text has to be shrinked */
 
-
     /* shorten text if necessary */
     for(i = 1; (len - (i * 3) > 0) && (textext.width > d->rect.width); i++) {
         len -= i * 3;
         text[len - 1] = '\0';
-        cairo_text_extents(cr, (unsigned char *) text, &textext);
+        cairo_text_extents(cr, text, &textext);
         shortened = 1;
     }
     if(textext.width > d->rect.width)
@@ -135,10 +131,9 @@ draw_text(Display * dpy, cairo_t * cr, D
     }
 
     /* draw fg text */
-    cairo_set_alpha(cr, 1.0);
-    cairo_set_rgb_color(cr, d->fg.r, d->fg.g, d->fg.b);
+    cairo_set_source_rgba(cr, d->fg.r, d->fg.g, d->fg.b, 1.0);
     cairo_move_to(cr, offx, offy);
-    cairo_show_text(cr, (unsigned char *) text);
+    cairo_show_text(cr, text);
 }
 
 /* draws meter */
@@ -148,14 +143,18 @@ draw_meter(Display * dpy, Draw * d)
     cairo_t *cr;
     int w = d->text ? d->rect.height / 2 : d->rect.width - 4;
     int offy, mh;
+    cairo_surface_t *surface;
+
 
-    cr = cairo_create();
+    surface = cairo_xlib_surface_create(dpy, d->drawable,
+		    DefaultVisual(dpy, d->screen_num),
+		    d->rect.width, d->rect.height);
+    cr = cairo_create(surface);
     if(!cr) {
         fprintf(stderr, "%s", "wmii: cannot create cairo context");
         exit(1);
     }
 
-    cairo_set_target_drawable(cr, dpy, d->drawable);
     cairo_set_operator(cr, CAIRO_OPERATOR_OVER);
     draw_bg(dpy, cr, d);
     _draw_border(cr, d);
@@ -163,8 +162,7 @@ draw_meter(Display * dpy, Draw * d)
     /* draw bg */
     mh = ((d->rect.height - 4) * d->val) / 100;
     offy = d->rect.y + d->rect.height - 2 - mh;
-    cairo_set_rgb_color(cr, d->fill.r, d->fill.g, d->fill.b);
-    cairo_set_alpha(cr, 1.0);
+    cairo_set_source_rgba(cr, d->fill.r, d->fill.g, d->fill.b, 1.0);
     cairo_rectangle(cr, d->rect.x + 2, offy, w, mh);
     cairo_fill(cr);
 
@@ -179,19 +177,25 @@ draw_meter(Display * dpy, Draw * d)
 
     /* get rid of the cairo overhead */
     cairo_destroy(cr);
+    cairo_surface_destroy(surface);
 }
 
 /* draws label */
 static void
 _draw_label(Display * dpy, Draw * d, int border)
 {
-    cairo_t *cr = cairo_create();
+    cairo_t *cr;
+    cairo_surface_t *surface;
+
+    surface = cairo_xlib_surface_create(dpy, d->drawable,
+		    DefaultVisual(dpy, d->screen_num),
+		    d->rect.width, d->rect.height);
+    cr = cairo_create(surface);
     if(!cr) {
         fprintf(stderr, "%s", "wmii: cannot create cairo context");
         exit(1);
     }
 
-    cairo_set_target_drawable(cr, dpy, d->drawable);
     cairo_set_operator(cr, CAIRO_OPERATOR_OVER);
     draw_bg(dpy, cr, d);
     if(border)
@@ -200,6 +204,7 @@ _draw_label(Display * dpy, Draw * d, int
 
     /* get rid of the cairo overhead */
     cairo_destroy(cr);
+    cairo_surface_destroy(surface);
 }
 
 void
@@ -219,10 +224,13 @@ text_width(Display * dpy, char *font, do
 {
     cairo_text_extents_t text;
     cairo_t *cr;
-
+    cairo_surface_t *surface;
+    int mon = DefaultScreen(dpy);
+    surface = cairo_xlib_surface_create(dpy, RootWindow(dpy, mon),
+		    DefaultVisual(dpy, mon), 10, 10);
     if(!utf8txt)
         return 0;
-    cr = cairo_create();
+    cr = cairo_create(surface);
 
     if(!cr) {
         fprintf(stderr, "%s", "wmii: cannot create cairo context");
@@ -230,12 +238,13 @@ text_width(Display * dpy, char *font, do
     }
 
     /* query font */
-    cairo_select_font(cr, font, CAIRO_FONT_SLANT_NORMAL,
-                      CAIRO_FONT_WEIGHT_NORMAL);
-    cairo_scale_font(cr, size);
+    cairo_select_font_face(cr, font, CAIRO_FONT_SLANT_NORMAL,
+                           CAIRO_FONT_WEIGHT_NORMAL);
+    cairo_set_font_size(cr, size);
 
     /* query text extends */
-    cairo_text_extents(cr, utf8txt, &text);
+    cairo_text_extents(cr, (char *)utf8txt, &text);
     cairo_destroy(cr);
+    cairo_surface_destroy(surface);
     return (int) text.width;
 }
