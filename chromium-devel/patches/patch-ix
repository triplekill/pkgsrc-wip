$NetBSD$

--- webkit/glue/plugins/pepper_plugin_instance.cc.orig	2010-09-13 15:17:45.000000000 +0000
+++ webkit/glue/plugins/pepper_plugin_instance.cc
@@ -220,10 +220,10 @@ PluginInstance::PluginInstance(PluginDel
       find_identifier_(-1),
       plugin_find_interface_(NULL),
       plugin_zoom_interface_(NULL),
-#if defined (OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
       num_pages_(0),
       pdf_output_done_(false),
-#endif  // defined (OS_LINUX)
+#endif  // defined(OS_POSIX) && !defined(OS_MACOSX)
       plugin_print_interface_(NULL),
       plugin_graphics_3d_interface_(NULL) {
   memset(&current_print_settings_, 0, sizeof(current_print_settings_));
@@ -572,17 +572,17 @@ int PluginInstance::PrintBegin(const gfx
   if (!num_pages)
     return 0;
   current_print_settings_ = print_settings;
-#if defined (OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
   num_pages_ = num_pages;
   pdf_output_done_ = false;
-#endif  // (OS_LINUX)
+#endif  // (OS_POSIX) && !(OS_MACOSX)
   return num_pages;
 }
 
 bool PluginInstance::PrintPage(int page_number, WebKit::WebCanvas* canvas) {
   DCHECK(plugin_print_interface_);
   PP_PrintPageNumberRange_Dev page_range;
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
   if (current_print_settings_.format == PP_PRINTOUTPUTFORMAT_PDF) {
     // On Linux we will try and output all pages as PDF in the first call to
     // PrintPage. This is a temporary hack.
@@ -593,9 +593,9 @@ bool PluginInstance::PrintPage(int page_
     page_range.first_page_number = 0;
     page_range.last_page_number = num_pages_ - 1;
   }
-#else  // defined(OS_LINUX)
+#else  // defined(OS_POSIX) && !defined(OS_MACOSX)
   page_range.first_page_number = page_range.last_page_number = page_number;
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_POSIX) && !defined(OS_MACOSX)
 
   PP_Resource print_output =
       plugin_print_interface_->PrintPages(GetPPInstance(), &page_range, 1);
@@ -623,10 +623,10 @@ void PluginInstance::PrintEnd() {
   memset(&current_print_settings_, 0, sizeof(current_print_settings_));
 #if defined(OS_MACOSX)
   last_printed_page_ = NULL;
-#elif defined(OS_LINUX)
+#elif defined(OS_POSIX)
   num_pages_ = 0;
   pdf_output_done_ = false;
-#endif  // defined(OS_LINUX)
+#endif  // defined(OS_POSIX)
 }
 
 void PluginInstance::Graphics3DContextLost() {
@@ -659,7 +659,7 @@ bool PluginInstance::PrintPDFOutput(PP_R
 #endif  // defined(OS_WIN)
 
   bool ret = false;
-#if defined(OS_LINUX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX)
   // On Linux we need to get the backing PdfPsMetafile and write the bits
   // directly.
   cairo_t* context = canvas->beginPlatformPaint();
